/*
 * Automatically Generated from Mathematica.
 * Wed 1 Mar 2023 15:16:39 GMT-08:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t98;
  double t359;
  double t532;
  double t767;
  double t850;
  double t899;
  double t953;
  double t1235;
  double t1335;
  double t1394;
  double t1399;
  double t1728;
  double t1815;
  double t2026;
  double t2124;
  double t2332;
  double t2335;
  double t2405;
  double t2431;
  double t2443;
  double t2465;
  double t2476;
  double t2490;
  double t2491;
  double t2516;
  double t2588;
  double t2593;
  double t2708;
  double t2716;
  double t2819;
  double t1440;
  double t1456;
  double t1633;
  double t1942;
  double t2021;
  double t2024;
  double t2139;
  double t2157;
  double t2329;
  double t2372;
  double t2373;
  double t2378;
  double t2392;
  double t2393;
  double t2833;
  double t2841;
  double t2842;
  double t3334;
  double t3544;
  double t3356;
  double t3357;
  double t3362;
  double t3381;
  double t3474;
  double t3529;
  double t3531;
  double t3538;
  double t3564;
  double t3568;
  double t4197;
  double t4214;
  double t4273;
  double t4385;
  double t4390;
  double t4401;
  double t4496;
  double t4505;
  double t4530;
  double t4626;
  double t4633;
  double t4674;
  double t5152;
  double t4875;
  double t4902;
  double t4909;
  double t4934;
  double t4959;
  double t4968;
  double t5059;
  double t5060;
  double t5061;
  double t5063;
  double t5124;
  double t5234;
  double t5254;
  double t5272;
  double t5285;
  double t5604;
  double t5629;
  double t5841;
  double t5843;
  double t5845;
  double t5851;
  double t5859;
  double t5860;
  double t5862;
  double t5867;
  double t5877;
  double t5885;
  double t5891;
  double t5893;
  double t5910;
  double t5912;
  double t5917;
  double t5922;
  double t5928;
  double t5930;
  double t5932;
  double t5936;
  double t5937;
  double t5952;
  double t5960;
  double t5961;
  double t5965;
  double t5980;
  double t5981;
  double t6118;
  double t6120;
  double t6133;
  double t6135;
  double t6136;
  double t6138;
  double t6140;
  double t6144;
  double t6145;
  double t6154;
  double t6156;
  double t6168;
  double t6170;
  double t6001;
  double t6005;
  double t6007;
  double t6017;
  double t6023;
  double t6024;
  double t6027;
  double t6029;
  double t6035;
  double t6072;
  double t6085;
  double t6091;
  double t6094;
  double t6095;
  double t6175;
  double t6179;
  double t6185;
  double t6278;
  double t6280;
  double t6282;
  double t6284;
  double t6286;
  double t6290;
  double t6305;
  double t6321;
  double t6324;
  double t6340;
  double t6341;
  double t4024;
  double t4072;
  double t4126;
  double t4168;
  double t4281;
  double t4289;
  double t4351;
  double t4354;
  double t4366;
  double t4371;
  double t4373;
  double t4410;
  double t4432;
  double t4434;
  double t4467;
  double t4474;
  double t4482;
  double t4485;
  double t4547;
  double t4557;
  double t4575;
  double t4588;
  double t4604;
  double t4623;
  double t4624;
  double t4743;
  double t4760;
  double t4784;
  double t4800;
  double t4802;
  double t4825;
  double t4831;
  double t4846;
  double t4848;
  double t4860;
  double t4871;
  double t6421;
  double t6434;
  double t6436;
  double t6437;
  double t6439;
  double t6444;
  double t6448;
  double t6452;
  double t6454;
  double t6457;
  double t6458;
  double t6459;
  double t6460;
  double t6471;
  double t6479;
  double t6708;
  double t6720;
  double t6723;
  double t6727;
  double t6733;
  double t6734;
  double t6736;
  double t6752;
  double t6753;
  double t6759;
  double t6767;
  double t6771;
  double t6772;
  double t6773;
  double t6780;
  double t6781;
  double t6811;
  double t6819;
  double t6836;
  double t6843;
  double t6847;
  double t6848;
  double t6857;
  double t6858;
  double t6862;
  double t6864;
  double t6866;
  double t6922;
  double t6923;
  double t6927;
  double t6928;
  double t6929;
  double t6932;
  double t6935;
  double t6936;
  double t6938;
  double t6941;
  double t6944;
  double t6949;
  double t6952;
  double t6872;
  double t6873;
  double t6875;
  double t6877;
  double t6880;
  double t6881;
  double t6884;
  double t6887;
  double t6889;
  double t6891;
  double t6892;
  double t6901;
  double t6906;
  double t6915;
  double t6955;
  double t6959;
  double t6963;
  double t7089;
  double t7090;
  double t7103;
  double t7104;
  double t7107;
  double t7108;
  double t7111;
  double t7113;
  double t7117;
  double t7121;
  double t7153;
  double t7198;
  double t7205;
  double t7215;
  double t7226;
  double t7227;
  double t7228;
  double t7234;
  double t7244;
  double t7246;
  double t7248;
  double t7250;
  double t7252;
  double t7266;
  double t7267;
  double t7272;
  double t7573;
  double t7576;
  double t7577;
  double t7578;
  double t7580;
  double t7581;
  double t7582;
  double t7583;
  double t7584;
  double t7586;
  double t7588;
  double t7589;
  double t7590;
  double t7592;
  double t7593;
  double t7594;
  double t7597;
  double t7600;
  double t7602;
  double t7606;
  double t7610;
  double t7611;
  double t7612;
  double t7613;
  double t7614;
  double t7617;
  double t7621;
  double t7664;
  double t7665;
  double t7667;
  double t7668;
  double t7669;
  double t7670;
  double t7672;
  double t7677;
  double t7678;
  double t7679;
  double t7680;
  double t7683;
  double t7685;
  double t7636;
  double t7640;
  double t7641;
  double t7642;
  double t7643;
  double t7644;
  double t7645;
  double t7646;
  double t7647;
  double t7648;
  double t7650;
  double t7651;
  double t7662;
  double t7663;
  double t7688;
  double t7691;
  double t7692;
  double t7722;
  double t7724;
  double t7725;
  double t7726;
  double t7727;
  double t7733;
  double t7734;
  double t7735;
  double t7736;
  double t7737;
  double t7739;
  double t7753;
  double t7754;
  double t7755;
  double t7756;
  double t7757;
  double t7758;
  double t7759;
  double t7760;
  double t7761;
  double t7762;
  double t7763;
  double t7764;
  double t7765;
  double t7766;
  double t7767;
  double t7826;
  double t7827;
  double t7828;
  double t7829;
  double t7830;
  double t7831;
  double t7832;
  double t7833;
  double t7834;
  double t7836;
  double t7837;
  double t7838;
  double t7839;
  double t7840;
  double t7841;
  double t7842;
  double t7843;
  double t7844;
  double t7845;
  double t7846;
  double t7847;
  double t7848;
  double t7849;
  double t7850;
  double t7851;
  double t7852;
  double t7853;
  double t7871;
  double t7872;
  double t7873;
  double t7874;
  double t7875;
  double t7876;
  double t7877;
  double t7878;
  double t7879;
  double t7880;
  double t7881;
  double t7882;
  double t7884;
  double t7857;
  double t7858;
  double t7859;
  double t7860;
  double t7861;
  double t7862;
  double t7863;
  double t7864;
  double t7865;
  double t7866;
  double t7867;
  double t7868;
  double t7869;
  double t7870;
  double t7885;
  double t7887;
  double t7888;
  double t7911;
  double t7912;
  double t7913;
  double t7914;
  double t7915;
  double t7916;
  double t7917;
  double t7918;
  double t7919;
  double t7920;
  double t7921;
  double t7934;
  double t7935;
  double t7936;
  double t7937;
  double t7939;
  double t7940;
  double t7941;
  double t7942;
  double t7943;
  double t7945;
  double t7946;
  double t7947;
  double t7948;
  double t7949;
  double t7950;
  double t7998;
  double t7999;
  double t8000;
  double t8001;
  double t8004;
  double t8005;
  double t8006;
  double t8007;
  double t8008;
  double t8009;
  double t8010;
  double t8011;
  double t8012;
  double t8013;
  double t8014;
  double t8015;
  double t8016;
  double t8017;
  double t8018;
  double t8019;
  double t8020;
  double t8021;
  double t8022;
  double t8023;
  double t8024;
  double t8025;
  double t8026;
  t98 = -1.*var4[1];
  t359 = var4[0] + t98;
  t532 = Power(t359,-2);
  t767 = 1/t359;
  t850 = 0.8128*var1[2];
  t899 = 0.8128*var1[6];
  t953 = 0.4064*var1[7];
  t1235 = 0. + t98 + t850 + t899 + t953;
  t1335 = -1.*t767*t1235;
  t1394 = 1. + t1335;
  t1399 = Power(t1394,3);
  t1728 = Power(t359,-3);
  t1815 = Power(t1394,2);
  t2026 = Power(t359,-4);
  t2124 = Power(t1235,2);
  t2332 = Power(t359,-5);
  t2335 = Power(t1235,3);
  t2405 = 13.2128768*var3[0]*t532*t1399;
  t2431 = -26.4257536*var3[5]*t532*t1399;
  t2443 = 13.2128768*var3[10]*t532*t1399;
  t2465 = 39.6386304*var3[5]*t1728*t1815*t1235;
  t2476 = -79.2772608*var3[10]*t1728*t1815*t1235;
  t2490 = 39.6386304*var3[15]*t1728*t1815*t1235;
  t2491 = 39.6386304*var3[10]*t2026*t1394*t2124;
  t2516 = -79.2772608*var3[15]*t2026*t1394*t2124;
  t2588 = 39.6386304*var3[20]*t2026*t1394*t2124;
  t2593 = 13.2128768*var3[15]*t2332*t2335;
  t2708 = -26.4257536*var3[20]*t2332*t2335;
  t2716 = 13.2128768*var3[25]*t2332*t2335;
  t2819 = t2405 + t2431 + t2443 + t2465 + t2476 + t2490 + t2491 + t2516 + t2588 + t2593 + t2708 + t2716;
  t1440 = 6.6064384*var3[0]*t532*t1399;
  t1456 = -13.2128768*var3[5]*t532*t1399;
  t1633 = 6.6064384*var3[10]*t532*t1399;
  t1942 = 19.8193152*var3[5]*t1728*t1815*t1235;
  t2021 = -39.6386304*var3[10]*t1728*t1815*t1235;
  t2024 = 19.8193152*var3[15]*t1728*t1815*t1235;
  t2139 = 19.8193152*var3[10]*t2026*t1394*t2124;
  t2157 = -39.6386304*var3[15]*t2026*t1394*t2124;
  t2329 = 19.8193152*var3[20]*t2026*t1394*t2124;
  t2372 = 6.6064384*var3[15]*t2332*t2335;
  t2373 = -13.2128768*var3[20]*t2332*t2335;
  t2378 = 6.6064384*var3[25]*t2332*t2335;
  t2392 = t1440 + t1456 + t1633 + t1942 + t2021 + t2024 + t2139 + t2157 + t2329 + t2372 + t2373 + t2378;
  t2393 = -1.*var2[7]*t2392;
  t2833 = -1.*var2[2]*t2819;
  t2841 = -1.*var2[6]*t2819;
  t2842 = t2393 + t2833 + t2841;
  t3334 = Power(t1394,4);
  t3544 = Power(t1235,4);
  t3356 = 4.064*var3[0]*t767*t3334;
  t3357 = -4.064*var3[5]*t767*t3334;
  t3362 = 16.256*var3[5]*t532*t1399*t1235;
  t3381 = -16.256*var3[10]*t532*t1399*t1235;
  t3474 = 24.383999999999997*var3[10]*t1728*t1815*t2124;
  t3529 = -24.383999999999997*var3[15]*t1728*t1815*t2124;
  t3531 = 16.256*var3[15]*t2026*t1394*t2335;
  t3538 = -16.256*var3[20]*t2026*t1394*t2335;
  t3564 = 4.064*var3[20]*t2332*t3544;
  t3568 = -4.064*var3[25]*t2332*t3544;
  t4197 = 4.064*t767*t3334;
  t4214 = -16.256*t532*t1399*t1235;
  t4273 = t4197 + t4214;
  t4385 = 16.256*t532*t1399*t1235;
  t4390 = -24.383999999999997*t1728*t1815*t2124;
  t4401 = t4385 + t4390;
  t4496 = 24.383999999999997*t1728*t1815*t2124;
  t4505 = -16.256*t2026*t1394*t2335;
  t4530 = t4496 + t4505;
  t4626 = 16.256*t2026*t1394*t2335;
  t4633 = -4.064*t2332*t3544;
  t4674 = t4626 + t4633;
  t5152 = Power(t359,-6);
  t4875 = 4.064*var3[0]*t532*t3334;
  t4902 = -4.064*var3[5]*t532*t3334;
  t4909 = -16.256*var3[0]*t1728*t1399*t1235;
  t4934 = 48.768*var3[5]*t1728*t1399*t1235;
  t4959 = -32.512*var3[10]*t1728*t1399*t1235;
  t4968 = -48.768*var3[5]*t2026*t1815*t2124;
  t5059 = 121.91999999999999*var3[10]*t2026*t1815*t2124;
  t5060 = -73.15199999999999*var3[15]*t2026*t1815*t2124;
  t5061 = -48.767999999999994*var3[10]*t2332*t1394*t2335;
  t5063 = 113.792*var3[15]*t2332*t1394*t2335;
  t5124 = -65.024*var3[20]*t2332*t1394*t2335;
  t5234 = -16.256*var3[15]*t5152*t3544;
  t5254 = 36.576*var3[20]*t5152*t3544;
  t5272 = -20.32*var3[25]*t5152*t3544;
  t5285 = t4875 + t4902 + t4909 + t4934 + t4959 + t4968 + t5059 + t5060 + t5061 + t5063 + t5124 + t5234 + t5254 + t5272;
  t5604 = -1.*t532*t1235;
  t5629 = t767 + t5604;
  t5841 = 16.256*var3[5]*t532*t1399;
  t5843 = -16.256*var3[10]*t532*t1399;
  t5845 = -16.256*var3[0]*t767*t5629*t1399;
  t5851 = 16.256*var3[5]*t767*t5629*t1399;
  t5859 = -4.064*var3[0]*t532*t3334;
  t5860 = 4.064*var3[5]*t532*t3334;
  t5862 = 48.767999999999994*var3[10]*t1728*t1815*t1235;
  t5867 = -48.767999999999994*var3[15]*t1728*t1815*t1235;
  t5877 = -48.768*var3[5]*t532*t5629*t1815*t1235;
  t5885 = 48.768*var3[10]*t532*t5629*t1815*t1235;
  t5891 = -32.512*var3[5]*t1728*t1399*t1235;
  t5893 = 32.512*var3[10]*t1728*t1399*t1235;
  t5910 = 48.768*var3[15]*t2026*t1394*t2124;
  t5912 = -48.768*var3[20]*t2026*t1394*t2124;
  t5917 = -48.767999999999994*var3[10]*t1728*t5629*t1394*t2124;
  t5922 = 48.767999999999994*var3[15]*t1728*t5629*t1394*t2124;
  t5928 = -73.15199999999999*var3[10]*t2026*t1815*t2124;
  t5930 = 73.15199999999999*var3[15]*t2026*t1815*t2124;
  t5932 = 16.256*var3[20]*t2332*t2335;
  t5936 = -16.256*var3[25]*t2332*t2335;
  t5937 = -16.256*var3[15]*t2026*t5629*t2335;
  t5952 = 16.256*var3[20]*t2026*t5629*t2335;
  t5960 = -65.024*var3[15]*t2332*t1394*t2335;
  t5961 = 65.024*var3[20]*t2332*t1394*t2335;
  t5965 = -20.32*var3[20]*t5152*t3544;
  t5980 = 20.32*var3[25]*t5152*t3544;
  t5981 = t5841 + t5843 + t5845 + t5851 + t5859 + t5860 + t5862 + t5867 + t5877 + t5885 + t5891 + t5893 + t5910 + t5912 + t5917 + t5922 + t5928 + t5930 + t5932 + t5936 + t5937 + t5952 + t5960 + t5961 + t5965 + t5980;
  t6118 = 13.2128768*var3[1]*t532*t1399;
  t6120 = -26.4257536*var3[6]*t532*t1399;
  t6133 = 13.2128768*var3[11]*t532*t1399;
  t6135 = 39.6386304*var3[6]*t1728*t1815*t1235;
  t6136 = -79.2772608*var3[11]*t1728*t1815*t1235;
  t6138 = 39.6386304*var3[16]*t1728*t1815*t1235;
  t6140 = 39.6386304*var3[11]*t2026*t1394*t2124;
  t6144 = -79.2772608*var3[16]*t2026*t1394*t2124;
  t6145 = 39.6386304*var3[21]*t2026*t1394*t2124;
  t6154 = 13.2128768*var3[16]*t2332*t2335;
  t6156 = -26.4257536*var3[21]*t2332*t2335;
  t6168 = 13.2128768*var3[26]*t2332*t2335;
  t6170 = t6118 + t6120 + t6133 + t6135 + t6136 + t6138 + t6140 + t6144 + t6145 + t6154 + t6156 + t6168;
  t6001 = 6.6064384*var3[1]*t532*t1399;
  t6005 = -13.2128768*var3[6]*t532*t1399;
  t6007 = 6.6064384*var3[11]*t532*t1399;
  t6017 = 19.8193152*var3[6]*t1728*t1815*t1235;
  t6023 = -39.6386304*var3[11]*t1728*t1815*t1235;
  t6024 = 19.8193152*var3[16]*t1728*t1815*t1235;
  t6027 = 19.8193152*var3[11]*t2026*t1394*t2124;
  t6029 = -39.6386304*var3[16]*t2026*t1394*t2124;
  t6035 = 19.8193152*var3[21]*t2026*t1394*t2124;
  t6072 = 6.6064384*var3[16]*t2332*t2335;
  t6085 = -13.2128768*var3[21]*t2332*t2335;
  t6091 = 6.6064384*var3[26]*t2332*t2335;
  t6094 = t6001 + t6005 + t6007 + t6017 + t6023 + t6024 + t6027 + t6029 + t6035 + t6072 + t6085 + t6091;
  t6095 = -1.*var2[7]*t6094;
  t6175 = -1.*var2[2]*t6170;
  t6179 = -1.*var2[6]*t6170;
  t6185 = t6095 + t6175 + t6179;
  t6278 = 4.064*var3[1]*t767*t3334;
  t6280 = -4.064*var3[6]*t767*t3334;
  t6282 = 16.256*var3[6]*t532*t1399*t1235;
  t6284 = -16.256*var3[11]*t532*t1399*t1235;
  t6286 = 24.383999999999997*var3[11]*t1728*t1815*t2124;
  t6290 = -24.383999999999997*var3[16]*t1728*t1815*t2124;
  t6305 = 16.256*var3[16]*t2026*t1394*t2335;
  t6321 = -16.256*var3[21]*t2026*t1394*t2335;
  t6324 = 4.064*var3[21]*t2332*t3544;
  t6340 = -4.064*var3[26]*t2332*t3544;
  t6341 = t6278 + t6280 + t6282 + t6284 + t6286 + t6290 + t6305 + t6321 + t6324 + t6340;
  t4024 = 4.064*var2[2]*t767*t3334;
  t4072 = 4.064*var2[6]*t767*t3334;
  t4126 = 2.032*var2[7]*t767*t3334;
  t4168 = t4024 + t4072 + t4126;
  t4281 = -1.*var2[2]*t4273;
  t4289 = -1.*var2[6]*t4273;
  t4351 = 2.032*t767*t3334;
  t4354 = -8.128*t532*t1399*t1235;
  t4366 = t4351 + t4354;
  t4371 = -1.*var2[7]*t4366;
  t4373 = t4281 + t4289 + t4371;
  t4410 = -1.*var2[2]*t4401;
  t4432 = -1.*var2[6]*t4401;
  t4434 = 8.128*t532*t1399*t1235;
  t4467 = -12.191999999999998*t1728*t1815*t2124;
  t4474 = t4434 + t4467;
  t4482 = -1.*var2[7]*t4474;
  t4485 = t4410 + t4432 + t4482;
  t4547 = -1.*var2[2]*t4530;
  t4557 = -1.*var2[6]*t4530;
  t4575 = 12.191999999999998*t1728*t1815*t2124;
  t4588 = -8.128*t2026*t1394*t2335;
  t4604 = t4575 + t4588;
  t4623 = -1.*var2[7]*t4604;
  t4624 = t4547 + t4557 + t4623;
  t4743 = -1.*var2[2]*t4674;
  t4760 = -1.*var2[6]*t4674;
  t4784 = 8.128*t2026*t1394*t2335;
  t4800 = -2.032*t2332*t3544;
  t4802 = t4784 + t4800;
  t4825 = -1.*var2[7]*t4802;
  t4831 = t4743 + t4760 + t4825;
  t4846 = -4.064*var2[2]*t2332*t3544;
  t4848 = -4.064*var2[6]*t2332*t3544;
  t4860 = -2.032*var2[7]*t2332*t3544;
  t4871 = t4846 + t4848 + t4860;
  t6421 = 4.064*var3[1]*t532*t3334;
  t6434 = -4.064*var3[6]*t532*t3334;
  t6436 = -16.256*var3[1]*t1728*t1399*t1235;
  t6437 = 48.768*var3[6]*t1728*t1399*t1235;
  t6439 = -32.512*var3[11]*t1728*t1399*t1235;
  t6444 = -48.768*var3[6]*t2026*t1815*t2124;
  t6448 = 121.91999999999999*var3[11]*t2026*t1815*t2124;
  t6452 = -73.15199999999999*var3[16]*t2026*t1815*t2124;
  t6454 = -48.767999999999994*var3[11]*t2332*t1394*t2335;
  t6457 = 113.792*var3[16]*t2332*t1394*t2335;
  t6458 = -65.024*var3[21]*t2332*t1394*t2335;
  t6459 = -16.256*var3[16]*t5152*t3544;
  t6460 = 36.576*var3[21]*t5152*t3544;
  t6471 = -20.32*var3[26]*t5152*t3544;
  t6479 = t6421 + t6434 + t6436 + t6437 + t6439 + t6444 + t6448 + t6452 + t6454 + t6457 + t6458 + t6459 + t6460 + t6471;
  t6708 = 16.256*var3[6]*t532*t1399;
  t6720 = -16.256*var3[11]*t532*t1399;
  t6723 = -16.256*var3[1]*t767*t5629*t1399;
  t6727 = 16.256*var3[6]*t767*t5629*t1399;
  t6733 = -4.064*var3[1]*t532*t3334;
  t6734 = 4.064*var3[6]*t532*t3334;
  t6736 = 48.767999999999994*var3[11]*t1728*t1815*t1235;
  t6752 = -48.767999999999994*var3[16]*t1728*t1815*t1235;
  t6753 = -48.768*var3[6]*t532*t5629*t1815*t1235;
  t6759 = 48.768*var3[11]*t532*t5629*t1815*t1235;
  t6767 = -32.512*var3[6]*t1728*t1399*t1235;
  t6771 = 32.512*var3[11]*t1728*t1399*t1235;
  t6772 = 48.768*var3[16]*t2026*t1394*t2124;
  t6773 = -48.768*var3[21]*t2026*t1394*t2124;
  t6780 = -48.767999999999994*var3[11]*t1728*t5629*t1394*t2124;
  t6781 = 48.767999999999994*var3[16]*t1728*t5629*t1394*t2124;
  t6811 = -73.15199999999999*var3[11]*t2026*t1815*t2124;
  t6819 = 73.15199999999999*var3[16]*t2026*t1815*t2124;
  t6836 = 16.256*var3[21]*t2332*t2335;
  t6843 = -16.256*var3[26]*t2332*t2335;
  t6847 = -16.256*var3[16]*t2026*t5629*t2335;
  t6848 = 16.256*var3[21]*t2026*t5629*t2335;
  t6857 = -65.024*var3[16]*t2332*t1394*t2335;
  t6858 = 65.024*var3[21]*t2332*t1394*t2335;
  t6862 = -20.32*var3[21]*t5152*t3544;
  t6864 = 20.32*var3[26]*t5152*t3544;
  t6866 = t6708 + t6720 + t6723 + t6727 + t6733 + t6734 + t6736 + t6752 + t6753 + t6759 + t6767 + t6771 + t6772 + t6773 + t6780 + t6781 + t6811 + t6819 + t6836 + t6843 + t6847 + t6848 + t6857 + t6858 + t6862 + t6864;
  t6922 = 13.2128768*var3[2]*t532*t1399;
  t6923 = -26.4257536*var3[7]*t532*t1399;
  t6927 = 13.2128768*var3[12]*t532*t1399;
  t6928 = 39.6386304*var3[7]*t1728*t1815*t1235;
  t6929 = -79.2772608*var3[12]*t1728*t1815*t1235;
  t6932 = 39.6386304*var3[17]*t1728*t1815*t1235;
  t6935 = 39.6386304*var3[12]*t2026*t1394*t2124;
  t6936 = -79.2772608*var3[17]*t2026*t1394*t2124;
  t6938 = 39.6386304*var3[22]*t2026*t1394*t2124;
  t6941 = 13.2128768*var3[17]*t2332*t2335;
  t6944 = -26.4257536*var3[22]*t2332*t2335;
  t6949 = 13.2128768*var3[27]*t2332*t2335;
  t6952 = t6922 + t6923 + t6927 + t6928 + t6929 + t6932 + t6935 + t6936 + t6938 + t6941 + t6944 + t6949;
  t6872 = 6.6064384*var3[2]*t532*t1399;
  t6873 = -13.2128768*var3[7]*t532*t1399;
  t6875 = 6.6064384*var3[12]*t532*t1399;
  t6877 = 19.8193152*var3[7]*t1728*t1815*t1235;
  t6880 = -39.6386304*var3[12]*t1728*t1815*t1235;
  t6881 = 19.8193152*var3[17]*t1728*t1815*t1235;
  t6884 = 19.8193152*var3[12]*t2026*t1394*t2124;
  t6887 = -39.6386304*var3[17]*t2026*t1394*t2124;
  t6889 = 19.8193152*var3[22]*t2026*t1394*t2124;
  t6891 = 6.6064384*var3[17]*t2332*t2335;
  t6892 = -13.2128768*var3[22]*t2332*t2335;
  t6901 = 6.6064384*var3[27]*t2332*t2335;
  t6906 = t6872 + t6873 + t6875 + t6877 + t6880 + t6881 + t6884 + t6887 + t6889 + t6891 + t6892 + t6901;
  t6915 = -1.*var2[7]*t6906;
  t6955 = -1.*var2[2]*t6952;
  t6959 = -1.*var2[6]*t6952;
  t6963 = t6915 + t6955 + t6959;
  t7089 = 4.064*var3[2]*t767*t3334;
  t7090 = -4.064*var3[7]*t767*t3334;
  t7103 = 16.256*var3[7]*t532*t1399*t1235;
  t7104 = -16.256*var3[12]*t532*t1399*t1235;
  t7107 = 24.383999999999997*var3[12]*t1728*t1815*t2124;
  t7108 = -24.383999999999997*var3[17]*t1728*t1815*t2124;
  t7111 = 16.256*var3[17]*t2026*t1394*t2335;
  t7113 = -16.256*var3[22]*t2026*t1394*t2335;
  t7117 = 4.064*var3[22]*t2332*t3544;
  t7121 = -4.064*var3[27]*t2332*t3544;
  t7153 = t7089 + t7090 + t7103 + t7104 + t7107 + t7108 + t7111 + t7113 + t7117 + t7121;
  t7198 = 4.064*var3[2]*t532*t3334;
  t7205 = -4.064*var3[7]*t532*t3334;
  t7215 = -16.256*var3[2]*t1728*t1399*t1235;
  t7226 = 48.768*var3[7]*t1728*t1399*t1235;
  t7227 = -32.512*var3[12]*t1728*t1399*t1235;
  t7228 = -48.768*var3[7]*t2026*t1815*t2124;
  t7234 = 121.91999999999999*var3[12]*t2026*t1815*t2124;
  t7244 = -73.15199999999999*var3[17]*t2026*t1815*t2124;
  t7246 = -48.767999999999994*var3[12]*t2332*t1394*t2335;
  t7248 = 113.792*var3[17]*t2332*t1394*t2335;
  t7250 = -65.024*var3[22]*t2332*t1394*t2335;
  t7252 = -16.256*var3[17]*t5152*t3544;
  t7266 = 36.576*var3[22]*t5152*t3544;
  t7267 = -20.32*var3[27]*t5152*t3544;
  t7272 = t7198 + t7205 + t7215 + t7226 + t7227 + t7228 + t7234 + t7244 + t7246 + t7248 + t7250 + t7252 + t7266 + t7267;
  t7573 = 16.256*var3[7]*t532*t1399;
  t7576 = -16.256*var3[12]*t532*t1399;
  t7577 = -16.256*var3[2]*t767*t5629*t1399;
  t7578 = 16.256*var3[7]*t767*t5629*t1399;
  t7580 = -4.064*var3[2]*t532*t3334;
  t7581 = 4.064*var3[7]*t532*t3334;
  t7582 = 48.767999999999994*var3[12]*t1728*t1815*t1235;
  t7583 = -48.767999999999994*var3[17]*t1728*t1815*t1235;
  t7584 = -48.768*var3[7]*t532*t5629*t1815*t1235;
  t7586 = 48.768*var3[12]*t532*t5629*t1815*t1235;
  t7588 = -32.512*var3[7]*t1728*t1399*t1235;
  t7589 = 32.512*var3[12]*t1728*t1399*t1235;
  t7590 = 48.768*var3[17]*t2026*t1394*t2124;
  t7592 = -48.768*var3[22]*t2026*t1394*t2124;
  t7593 = -48.767999999999994*var3[12]*t1728*t5629*t1394*t2124;
  t7594 = 48.767999999999994*var3[17]*t1728*t5629*t1394*t2124;
  t7597 = -73.15199999999999*var3[12]*t2026*t1815*t2124;
  t7600 = 73.15199999999999*var3[17]*t2026*t1815*t2124;
  t7602 = 16.256*var3[22]*t2332*t2335;
  t7606 = -16.256*var3[27]*t2332*t2335;
  t7610 = -16.256*var3[17]*t2026*t5629*t2335;
  t7611 = 16.256*var3[22]*t2026*t5629*t2335;
  t7612 = -65.024*var3[17]*t2332*t1394*t2335;
  t7613 = 65.024*var3[22]*t2332*t1394*t2335;
  t7614 = -20.32*var3[22]*t5152*t3544;
  t7617 = 20.32*var3[27]*t5152*t3544;
  t7621 = t7573 + t7576 + t7577 + t7578 + t7580 + t7581 + t7582 + t7583 + t7584 + t7586 + t7588 + t7589 + t7590 + t7592 + t7593 + t7594 + t7597 + t7600 + t7602 + t7606 + t7610 + t7611 + t7612 + t7613 + t7614 + t7617;
  t7664 = 13.2128768*var3[3]*t532*t1399;
  t7665 = -26.4257536*var3[8]*t532*t1399;
  t7667 = 13.2128768*var3[13]*t532*t1399;
  t7668 = 39.6386304*var3[8]*t1728*t1815*t1235;
  t7669 = -79.2772608*var3[13]*t1728*t1815*t1235;
  t7670 = 39.6386304*var3[18]*t1728*t1815*t1235;
  t7672 = 39.6386304*var3[13]*t2026*t1394*t2124;
  t7677 = -79.2772608*var3[18]*t2026*t1394*t2124;
  t7678 = 39.6386304*var3[23]*t2026*t1394*t2124;
  t7679 = 13.2128768*var3[18]*t2332*t2335;
  t7680 = -26.4257536*var3[23]*t2332*t2335;
  t7683 = 13.2128768*var3[28]*t2332*t2335;
  t7685 = t7664 + t7665 + t7667 + t7668 + t7669 + t7670 + t7672 + t7677 + t7678 + t7679 + t7680 + t7683;
  t7636 = 6.6064384*var3[3]*t532*t1399;
  t7640 = -13.2128768*var3[8]*t532*t1399;
  t7641 = 6.6064384*var3[13]*t532*t1399;
  t7642 = 19.8193152*var3[8]*t1728*t1815*t1235;
  t7643 = -39.6386304*var3[13]*t1728*t1815*t1235;
  t7644 = 19.8193152*var3[18]*t1728*t1815*t1235;
  t7645 = 19.8193152*var3[13]*t2026*t1394*t2124;
  t7646 = -39.6386304*var3[18]*t2026*t1394*t2124;
  t7647 = 19.8193152*var3[23]*t2026*t1394*t2124;
  t7648 = 6.6064384*var3[18]*t2332*t2335;
  t7650 = -13.2128768*var3[23]*t2332*t2335;
  t7651 = 6.6064384*var3[28]*t2332*t2335;
  t7662 = t7636 + t7640 + t7641 + t7642 + t7643 + t7644 + t7645 + t7646 + t7647 + t7648 + t7650 + t7651;
  t7663 = -1.*var2[7]*t7662;
  t7688 = -1.*var2[2]*t7685;
  t7691 = -1.*var2[6]*t7685;
  t7692 = t7663 + t7688 + t7691;
  t7722 = 4.064*var3[3]*t767*t3334;
  t7724 = -4.064*var3[8]*t767*t3334;
  t7725 = 16.256*var3[8]*t532*t1399*t1235;
  t7726 = -16.256*var3[13]*t532*t1399*t1235;
  t7727 = 24.383999999999997*var3[13]*t1728*t1815*t2124;
  t7733 = -24.383999999999997*var3[18]*t1728*t1815*t2124;
  t7734 = 16.256*var3[18]*t2026*t1394*t2335;
  t7735 = -16.256*var3[23]*t2026*t1394*t2335;
  t7736 = 4.064*var3[23]*t2332*t3544;
  t7737 = -4.064*var3[28]*t2332*t3544;
  t7739 = t7722 + t7724 + t7725 + t7726 + t7727 + t7733 + t7734 + t7735 + t7736 + t7737;
  t7753 = 4.064*var3[3]*t532*t3334;
  t7754 = -4.064*var3[8]*t532*t3334;
  t7755 = -16.256*var3[3]*t1728*t1399*t1235;
  t7756 = 48.768*var3[8]*t1728*t1399*t1235;
  t7757 = -32.512*var3[13]*t1728*t1399*t1235;
  t7758 = -48.768*var3[8]*t2026*t1815*t2124;
  t7759 = 121.91999999999999*var3[13]*t2026*t1815*t2124;
  t7760 = -73.15199999999999*var3[18]*t2026*t1815*t2124;
  t7761 = -48.767999999999994*var3[13]*t2332*t1394*t2335;
  t7762 = 113.792*var3[18]*t2332*t1394*t2335;
  t7763 = -65.024*var3[23]*t2332*t1394*t2335;
  t7764 = -16.256*var3[18]*t5152*t3544;
  t7765 = 36.576*var3[23]*t5152*t3544;
  t7766 = -20.32*var3[28]*t5152*t3544;
  t7767 = t7753 + t7754 + t7755 + t7756 + t7757 + t7758 + t7759 + t7760 + t7761 + t7762 + t7763 + t7764 + t7765 + t7766;
  t7826 = 16.256*var3[8]*t532*t1399;
  t7827 = -16.256*var3[13]*t532*t1399;
  t7828 = -16.256*var3[3]*t767*t5629*t1399;
  t7829 = 16.256*var3[8]*t767*t5629*t1399;
  t7830 = -4.064*var3[3]*t532*t3334;
  t7831 = 4.064*var3[8]*t532*t3334;
  t7832 = 48.767999999999994*var3[13]*t1728*t1815*t1235;
  t7833 = -48.767999999999994*var3[18]*t1728*t1815*t1235;
  t7834 = -48.768*var3[8]*t532*t5629*t1815*t1235;
  t7836 = 48.768*var3[13]*t532*t5629*t1815*t1235;
  t7837 = -32.512*var3[8]*t1728*t1399*t1235;
  t7838 = 32.512*var3[13]*t1728*t1399*t1235;
  t7839 = 48.768*var3[18]*t2026*t1394*t2124;
  t7840 = -48.768*var3[23]*t2026*t1394*t2124;
  t7841 = -48.767999999999994*var3[13]*t1728*t5629*t1394*t2124;
  t7842 = 48.767999999999994*var3[18]*t1728*t5629*t1394*t2124;
  t7843 = -73.15199999999999*var3[13]*t2026*t1815*t2124;
  t7844 = 73.15199999999999*var3[18]*t2026*t1815*t2124;
  t7845 = 16.256*var3[23]*t2332*t2335;
  t7846 = -16.256*var3[28]*t2332*t2335;
  t7847 = -16.256*var3[18]*t2026*t5629*t2335;
  t7848 = 16.256*var3[23]*t2026*t5629*t2335;
  t7849 = -65.024*var3[18]*t2332*t1394*t2335;
  t7850 = 65.024*var3[23]*t2332*t1394*t2335;
  t7851 = -20.32*var3[23]*t5152*t3544;
  t7852 = 20.32*var3[28]*t5152*t3544;
  t7853 = t7826 + t7827 + t7828 + t7829 + t7830 + t7831 + t7832 + t7833 + t7834 + t7836 + t7837 + t7838 + t7839 + t7840 + t7841 + t7842 + t7843 + t7844 + t7845 + t7846 + t7847 + t7848 + t7849 + t7850 + t7851 + t7852;
  t7871 = 13.2128768*var3[4]*t532*t1399;
  t7872 = -26.4257536*var3[9]*t532*t1399;
  t7873 = 13.2128768*var3[14]*t532*t1399;
  t7874 = 39.6386304*var3[9]*t1728*t1815*t1235;
  t7875 = -79.2772608*var3[14]*t1728*t1815*t1235;
  t7876 = 39.6386304*var3[19]*t1728*t1815*t1235;
  t7877 = 39.6386304*var3[14]*t2026*t1394*t2124;
  t7878 = -79.2772608*var3[19]*t2026*t1394*t2124;
  t7879 = 39.6386304*var3[24]*t2026*t1394*t2124;
  t7880 = 13.2128768*var3[19]*t2332*t2335;
  t7881 = -26.4257536*var3[24]*t2332*t2335;
  t7882 = 13.2128768*var3[29]*t2332*t2335;
  t7884 = t7871 + t7872 + t7873 + t7874 + t7875 + t7876 + t7877 + t7878 + t7879 + t7880 + t7881 + t7882;
  t7857 = 6.6064384*var3[4]*t532*t1399;
  t7858 = -13.2128768*var3[9]*t532*t1399;
  t7859 = 6.6064384*var3[14]*t532*t1399;
  t7860 = 19.8193152*var3[9]*t1728*t1815*t1235;
  t7861 = -39.6386304*var3[14]*t1728*t1815*t1235;
  t7862 = 19.8193152*var3[19]*t1728*t1815*t1235;
  t7863 = 19.8193152*var3[14]*t2026*t1394*t2124;
  t7864 = -39.6386304*var3[19]*t2026*t1394*t2124;
  t7865 = 19.8193152*var3[24]*t2026*t1394*t2124;
  t7866 = 6.6064384*var3[19]*t2332*t2335;
  t7867 = -13.2128768*var3[24]*t2332*t2335;
  t7868 = 6.6064384*var3[29]*t2332*t2335;
  t7869 = t7857 + t7858 + t7859 + t7860 + t7861 + t7862 + t7863 + t7864 + t7865 + t7866 + t7867 + t7868;
  t7870 = -1.*var2[7]*t7869;
  t7885 = -1.*var2[2]*t7884;
  t7887 = -1.*var2[6]*t7884;
  t7888 = t7870 + t7885 + t7887;
  t7911 = 4.064*var3[4]*t767*t3334;
  t7912 = -4.064*var3[9]*t767*t3334;
  t7913 = 16.256*var3[9]*t532*t1399*t1235;
  t7914 = -16.256*var3[14]*t532*t1399*t1235;
  t7915 = 24.383999999999997*var3[14]*t1728*t1815*t2124;
  t7916 = -24.383999999999997*var3[19]*t1728*t1815*t2124;
  t7917 = 16.256*var3[19]*t2026*t1394*t2335;
  t7918 = -16.256*var3[24]*t2026*t1394*t2335;
  t7919 = 4.064*var3[24]*t2332*t3544;
  t7920 = -4.064*var3[29]*t2332*t3544;
  t7921 = t7911 + t7912 + t7913 + t7914 + t7915 + t7916 + t7917 + t7918 + t7919 + t7920;
  t7934 = 4.064*var3[4]*t532*t3334;
  t7935 = -4.064*var3[9]*t532*t3334;
  t7936 = -16.256*var3[4]*t1728*t1399*t1235;
  t7937 = 48.768*var3[9]*t1728*t1399*t1235;
  t7939 = -32.512*var3[14]*t1728*t1399*t1235;
  t7940 = -48.768*var3[9]*t2026*t1815*t2124;
  t7941 = 121.91999999999999*var3[14]*t2026*t1815*t2124;
  t7942 = -73.15199999999999*var3[19]*t2026*t1815*t2124;
  t7943 = -48.767999999999994*var3[14]*t2332*t1394*t2335;
  t7945 = 113.792*var3[19]*t2332*t1394*t2335;
  t7946 = -65.024*var3[24]*t2332*t1394*t2335;
  t7947 = -16.256*var3[19]*t5152*t3544;
  t7948 = 36.576*var3[24]*t5152*t3544;
  t7949 = -20.32*var3[29]*t5152*t3544;
  t7950 = t7934 + t7935 + t7936 + t7937 + t7939 + t7940 + t7941 + t7942 + t7943 + t7945 + t7946 + t7947 + t7948 + t7949;
  t7998 = 16.256*var3[9]*t532*t1399;
  t7999 = -16.256*var3[14]*t532*t1399;
  t8000 = -16.256*var3[4]*t767*t5629*t1399;
  t8001 = 16.256*var3[9]*t767*t5629*t1399;
  t8004 = -4.064*var3[4]*t532*t3334;
  t8005 = 4.064*var3[9]*t532*t3334;
  t8006 = 48.767999999999994*var3[14]*t1728*t1815*t1235;
  t8007 = -48.767999999999994*var3[19]*t1728*t1815*t1235;
  t8008 = -48.768*var3[9]*t532*t5629*t1815*t1235;
  t8009 = 48.768*var3[14]*t532*t5629*t1815*t1235;
  t8010 = -32.512*var3[9]*t1728*t1399*t1235;
  t8011 = 32.512*var3[14]*t1728*t1399*t1235;
  t8012 = 48.768*var3[19]*t2026*t1394*t2124;
  t8013 = -48.768*var3[24]*t2026*t1394*t2124;
  t8014 = -48.767999999999994*var3[14]*t1728*t5629*t1394*t2124;
  t8015 = 48.767999999999994*var3[19]*t1728*t5629*t1394*t2124;
  t8016 = -73.15199999999999*var3[14]*t2026*t1815*t2124;
  t8017 = 73.15199999999999*var3[19]*t2026*t1815*t2124;
  t8018 = 16.256*var3[24]*t2332*t2335;
  t8019 = -16.256*var3[29]*t2332*t2335;
  t8020 = -16.256*var3[19]*t2026*t5629*t2335;
  t8021 = 16.256*var3[24]*t2026*t5629*t2335;
  t8022 = -65.024*var3[19]*t2332*t1394*t2335;
  t8023 = 65.024*var3[24]*t2332*t1394*t2335;
  t8024 = -20.32*var3[24]*t5152*t3544;
  t8025 = 20.32*var3[29]*t5152*t3544;
  t8026 = t7998 + t7999 + t8000 + t8001 + t8004 + t8005 + t8006 + t8007 + t8008 + t8009 + t8010 + t8011 + t8012 + t8013 + t8014 + t8015 + t8016 + t8017 + t8018 + t8019 + t8020 + t8021 + t8022 + t8023 + t8024 + t8025;
  p_output1[0]=t2842;
  p_output1[1]=t2842;
  p_output1[2]=-1.*t2392*var2[2] - 1.*t2392*var2[6] - 1.*var2[7]*(3.3032192*t1399*t532*var3[0] + 9.9096576*t1235*t1728*t1815*var3[5] - 6.6064384*t1399*t532*var3[5] - 19.8193152*t1235*t1728*t1815*var3[10] + 9.9096576*t1394*t2026*t2124*var3[10] + 3.3032192*t1399*t532*var3[10] + 9.9096576*t1235*t1728*t1815*var3[15] - 19.8193152*t1394*t2026*t2124*var3[15] + 3.3032192*t2332*t2335*var3[15] + 9.9096576*t1394*t2026*t2124*var3[20] - 6.6064384*t2332*t2335*var3[20] + 3.3032192*t2332*t2335*var3[25]);
  p_output1[3]=t3356 + t3357 + t3362 + t3381 + t3474 + t3529 + t3531 + t3538 + t3564 + t3568;
  p_output1[4]=1. + t3356 + t3357 + t3362 + t3381 + t3474 + t3529 + t3531 + t3538 + t3564 + t3568;
  p_output1[5]=2.032*t3334*t767*var3[0] + 8.128*t1235*t1399*t532*var3[5] - 2.032*t3334*t767*var3[5] + 12.191999999999998*t1728*t1815*t2124*var3[10] - 8.128*t1235*t1399*t532*var3[10] - 12.191999999999998*t1728*t1815*t2124*var3[15] + 8.128*t1394*t2026*t2335*var3[15] - 8.128*t1394*t2026*t2335*var3[20] + 2.032*t2332*t3544*var3[20] - 2.032*t2332*t3544*var3[25];
  p_output1[6]=t4168;
  p_output1[7]=t4373;
  p_output1[8]=t4485;
  p_output1[9]=t4624;
  p_output1[10]=t4831;
  p_output1[11]=t4871;
  p_output1[12]=-1.*t5285*var2[2] - 1.*t5285*var2[6] - 1.*var2[7]*(-8.128*t1235*t1399*t1728*var3[0] + 2.032*t3334*t532*var3[0] + 24.384*t1235*t1399*t1728*var3[5] - 24.384*t1815*t2026*t2124*var3[5] - 2.032*t3334*t532*var3[5] - 16.256*t1235*t1399*t1728*var3[10] + 60.959999999999994*t1815*t2026*t2124*var3[10] - 24.383999999999997*t1394*t2332*t2335*var3[10] - 36.57599999999999*t1815*t2026*t2124*var3[15] + 56.896*t1394*t2332*t2335*var3[15] - 8.128*t3544*t5152*var3[15] - 32.512*t1394*t2332*t2335*var3[20] + 18.288*t3544*t5152*var3[20] - 10.16*t3544*t5152*var3[25]);
  p_output1[13]=-1.*t5981*var2[2] - 1.*t5981*var2[6] - 1.*var2[7]*(-2.032*t3334*t532*var3[0] - 8.128*t1399*t5629*t767*var3[0] - 16.256*t1235*t1399*t1728*var3[5] + 8.128*t1399*t532*var3[5] + 2.032*t3334*t532*var3[5] - 24.384*t1235*t1815*t532*t5629*var3[5] + 8.128*t1399*t5629*t767*var3[5] + 16.256*t1235*t1399*t1728*var3[10] + 24.383999999999997*t1235*t1728*t1815*var3[10] - 36.57599999999999*t1815*t2026*t2124*var3[10] - 8.128*t1399*t532*var3[10] - 24.383999999999997*t1394*t1728*t2124*t5629*var3[10] + 24.384*t1235*t1815*t532*t5629*var3[10] - 24.383999999999997*t1235*t1728*t1815*var3[15] + 24.384*t1394*t2026*t2124*var3[15] + 36.57599999999999*t1815*t2026*t2124*var3[15] - 32.512*t1394*t2332*t2335*var3[15] + 24.383999999999997*t1394*t1728*t2124*t5629*var3[15] - 8.128*t2026*t2335*t5629*var3[15] - 24.384*t1394*t2026*t2124*var3[20] + 8.128*t2332*t2335*var3[20] + 32.512*t1394*t2332*t2335*var3[20] - 10.16*t3544*t5152*var3[20] + 8.128*t2026*t2335*t5629*var3[20] - 8.128*t2332*t2335*var3[25] + 10.16*t3544*t5152*var3[25]);
  p_output1[14]=t6185;
  p_output1[15]=t6185;
  p_output1[16]=-1.*t6094*var2[2] - 1.*t6094*var2[6] - 1.*var2[7]*(3.3032192*t1399*t532*var3[1] + 9.9096576*t1235*t1728*t1815*var3[6] - 6.6064384*t1399*t532*var3[6] - 19.8193152*t1235*t1728*t1815*var3[11] + 9.9096576*t1394*t2026*t2124*var3[11] + 3.3032192*t1399*t532*var3[11] + 9.9096576*t1235*t1728*t1815*var3[16] - 19.8193152*t1394*t2026*t2124*var3[16] + 3.3032192*t2332*t2335*var3[16] + 9.9096576*t1394*t2026*t2124*var3[21] - 6.6064384*t2332*t2335*var3[21] + 3.3032192*t2332*t2335*var3[26]);
  p_output1[17]=t6341;
  p_output1[18]=t6341;
  p_output1[19]=1. + 2.032*t3334*t767*var3[1] + 8.128*t1235*t1399*t532*var3[6] - 2.032*t3334*t767*var3[6] + 12.191999999999998*t1728*t1815*t2124*var3[11] - 8.128*t1235*t1399*t532*var3[11] - 12.191999999999998*t1728*t1815*t2124*var3[16] + 8.128*t1394*t2026*t2335*var3[16] - 8.128*t1394*t2026*t2335*var3[21] + 2.032*t2332*t3544*var3[21] - 2.032*t2332*t3544*var3[26];
  p_output1[20]=t4168;
  p_output1[21]=t4373;
  p_output1[22]=t4485;
  p_output1[23]=t4624;
  p_output1[24]=t4831;
  p_output1[25]=t4871;
  p_output1[26]=-1.*t6479*var2[2] - 1.*t6479*var2[6] - 1.*var2[7]*(-8.128*t1235*t1399*t1728*var3[1] + 2.032*t3334*t532*var3[1] + 24.384*t1235*t1399*t1728*var3[6] - 24.384*t1815*t2026*t2124*var3[6] - 2.032*t3334*t532*var3[6] - 16.256*t1235*t1399*t1728*var3[11] + 60.959999999999994*t1815*t2026*t2124*var3[11] - 24.383999999999997*t1394*t2332*t2335*var3[11] - 36.57599999999999*t1815*t2026*t2124*var3[16] + 56.896*t1394*t2332*t2335*var3[16] - 8.128*t3544*t5152*var3[16] - 32.512*t1394*t2332*t2335*var3[21] + 18.288*t3544*t5152*var3[21] - 10.16*t3544*t5152*var3[26]);
  p_output1[27]=-1.*t6866*var2[2] - 1.*t6866*var2[6] - 1.*var2[7]*(-2.032*t3334*t532*var3[1] - 8.128*t1399*t5629*t767*var3[1] - 16.256*t1235*t1399*t1728*var3[6] + 8.128*t1399*t532*var3[6] + 2.032*t3334*t532*var3[6] - 24.384*t1235*t1815*t532*t5629*var3[6] + 8.128*t1399*t5629*t767*var3[6] + 16.256*t1235*t1399*t1728*var3[11] + 24.383999999999997*t1235*t1728*t1815*var3[11] - 36.57599999999999*t1815*t2026*t2124*var3[11] - 8.128*t1399*t532*var3[11] - 24.383999999999997*t1394*t1728*t2124*t5629*var3[11] + 24.384*t1235*t1815*t532*t5629*var3[11] - 24.383999999999997*t1235*t1728*t1815*var3[16] + 24.384*t1394*t2026*t2124*var3[16] + 36.57599999999999*t1815*t2026*t2124*var3[16] - 32.512*t1394*t2332*t2335*var3[16] + 24.383999999999997*t1394*t1728*t2124*t5629*var3[16] - 8.128*t2026*t2335*t5629*var3[16] - 24.384*t1394*t2026*t2124*var3[21] + 8.128*t2332*t2335*var3[21] + 32.512*t1394*t2332*t2335*var3[21] - 10.16*t3544*t5152*var3[21] + 8.128*t2026*t2335*t5629*var3[21] - 8.128*t2332*t2335*var3[26] + 10.16*t3544*t5152*var3[26]);
  p_output1[28]=t6963;
  p_output1[29]=t6963;
  p_output1[30]=-1.*t6906*var2[2] - 1.*t6906*var2[6] - 1.*var2[7]*(3.3032192*t1399*t532*var3[2] + 9.9096576*t1235*t1728*t1815*var3[7] - 6.6064384*t1399*t532*var3[7] - 19.8193152*t1235*t1728*t1815*var3[12] + 9.9096576*t1394*t2026*t2124*var3[12] + 3.3032192*t1399*t532*var3[12] + 9.9096576*t1235*t1728*t1815*var3[17] - 19.8193152*t1394*t2026*t2124*var3[17] + 3.3032192*t2332*t2335*var3[17] + 9.9096576*t1394*t2026*t2124*var3[22] - 6.6064384*t2332*t2335*var3[22] + 3.3032192*t2332*t2335*var3[27]);
  p_output1[31]=t7153;
  p_output1[32]=1.;
  p_output1[33]=t7153;
  p_output1[34]=2.032*t3334*t767*var3[2] + 8.128*t1235*t1399*t532*var3[7] - 2.032*t3334*t767*var3[7] + 12.191999999999998*t1728*t1815*t2124*var3[12] - 8.128*t1235*t1399*t532*var3[12] - 12.191999999999998*t1728*t1815*t2124*var3[17] + 8.128*t1394*t2026*t2335*var3[17] - 8.128*t1394*t2026*t2335*var3[22] + 2.032*t2332*t3544*var3[22] - 2.032*t2332*t3544*var3[27];
  p_output1[35]=t4168;
  p_output1[36]=t4373;
  p_output1[37]=t4485;
  p_output1[38]=t4624;
  p_output1[39]=t4831;
  p_output1[40]=t4871;
  p_output1[41]=-1.*t7272*var2[2] - 1.*t7272*var2[6] - 1.*var2[7]*(-8.128*t1235*t1399*t1728*var3[2] + 2.032*t3334*t532*var3[2] + 24.384*t1235*t1399*t1728*var3[7] - 24.384*t1815*t2026*t2124*var3[7] - 2.032*t3334*t532*var3[7] - 16.256*t1235*t1399*t1728*var3[12] + 60.959999999999994*t1815*t2026*t2124*var3[12] - 24.383999999999997*t1394*t2332*t2335*var3[12] - 36.57599999999999*t1815*t2026*t2124*var3[17] + 56.896*t1394*t2332*t2335*var3[17] - 8.128*t3544*t5152*var3[17] - 32.512*t1394*t2332*t2335*var3[22] + 18.288*t3544*t5152*var3[22] - 10.16*t3544*t5152*var3[27]);
  p_output1[42]=-1.*t7621*var2[2] - 1.*t7621*var2[6] - 1.*var2[7]*(-2.032*t3334*t532*var3[2] - 8.128*t1399*t5629*t767*var3[2] - 16.256*t1235*t1399*t1728*var3[7] + 8.128*t1399*t532*var3[7] + 2.032*t3334*t532*var3[7] - 24.384*t1235*t1815*t532*t5629*var3[7] + 8.128*t1399*t5629*t767*var3[7] + 16.256*t1235*t1399*t1728*var3[12] + 24.383999999999997*t1235*t1728*t1815*var3[12] - 36.57599999999999*t1815*t2026*t2124*var3[12] - 8.128*t1399*t532*var3[12] - 24.383999999999997*t1394*t1728*t2124*t5629*var3[12] + 24.384*t1235*t1815*t532*t5629*var3[12] - 24.383999999999997*t1235*t1728*t1815*var3[17] + 24.384*t1394*t2026*t2124*var3[17] + 36.57599999999999*t1815*t2026*t2124*var3[17] - 32.512*t1394*t2332*t2335*var3[17] + 24.383999999999997*t1394*t1728*t2124*t5629*var3[17] - 8.128*t2026*t2335*t5629*var3[17] - 24.384*t1394*t2026*t2124*var3[22] + 8.128*t2332*t2335*var3[22] + 32.512*t1394*t2332*t2335*var3[22] - 10.16*t3544*t5152*var3[22] + 8.128*t2026*t2335*t5629*var3[22] - 8.128*t2332*t2335*var3[27] + 10.16*t3544*t5152*var3[27]);
  p_output1[43]=t7692;
  p_output1[44]=t7692;
  p_output1[45]=-1.*t7662*var2[2] - 1.*t7662*var2[6] - 1.*var2[7]*(3.3032192*t1399*t532*var3[3] + 9.9096576*t1235*t1728*t1815*var3[8] - 6.6064384*t1399*t532*var3[8] - 19.8193152*t1235*t1728*t1815*var3[13] + 9.9096576*t1394*t2026*t2124*var3[13] + 3.3032192*t1399*t532*var3[13] + 9.9096576*t1235*t1728*t1815*var3[18] - 19.8193152*t1394*t2026*t2124*var3[18] + 3.3032192*t2332*t2335*var3[18] + 9.9096576*t1394*t2026*t2124*var3[23] - 6.6064384*t2332*t2335*var3[23] + 3.3032192*t2332*t2335*var3[28]);
  p_output1[46]=t7739;
  p_output1[47]=1.;
  p_output1[48]=t7739;
  p_output1[49]=2.032*t3334*t767*var3[3] + 8.128*t1235*t1399*t532*var3[8] - 2.032*t3334*t767*var3[8] + 12.191999999999998*t1728*t1815*t2124*var3[13] - 8.128*t1235*t1399*t532*var3[13] - 12.191999999999998*t1728*t1815*t2124*var3[18] + 8.128*t1394*t2026*t2335*var3[18] - 8.128*t1394*t2026*t2335*var3[23] + 2.032*t2332*t3544*var3[23] - 2.032*t2332*t3544*var3[28];
  p_output1[50]=t4168;
  p_output1[51]=t4373;
  p_output1[52]=t4485;
  p_output1[53]=t4624;
  p_output1[54]=t4831;
  p_output1[55]=t4871;
  p_output1[56]=-1.*t7767*var2[2] - 1.*t7767*var2[6] - 1.*var2[7]*(-8.128*t1235*t1399*t1728*var3[3] + 2.032*t3334*t532*var3[3] + 24.384*t1235*t1399*t1728*var3[8] - 24.384*t1815*t2026*t2124*var3[8] - 2.032*t3334*t532*var3[8] - 16.256*t1235*t1399*t1728*var3[13] + 60.959999999999994*t1815*t2026*t2124*var3[13] - 24.383999999999997*t1394*t2332*t2335*var3[13] - 36.57599999999999*t1815*t2026*t2124*var3[18] + 56.896*t1394*t2332*t2335*var3[18] - 8.128*t3544*t5152*var3[18] - 32.512*t1394*t2332*t2335*var3[23] + 18.288*t3544*t5152*var3[23] - 10.16*t3544*t5152*var3[28]);
  p_output1[57]=-1.*t7853*var2[2] - 1.*t7853*var2[6] - 1.*var2[7]*(-2.032*t3334*t532*var3[3] - 8.128*t1399*t5629*t767*var3[3] - 16.256*t1235*t1399*t1728*var3[8] + 8.128*t1399*t532*var3[8] + 2.032*t3334*t532*var3[8] - 24.384*t1235*t1815*t532*t5629*var3[8] + 8.128*t1399*t5629*t767*var3[8] + 16.256*t1235*t1399*t1728*var3[13] + 24.383999999999997*t1235*t1728*t1815*var3[13] - 36.57599999999999*t1815*t2026*t2124*var3[13] - 8.128*t1399*t532*var3[13] - 24.383999999999997*t1394*t1728*t2124*t5629*var3[13] + 24.384*t1235*t1815*t532*t5629*var3[13] - 24.383999999999997*t1235*t1728*t1815*var3[18] + 24.384*t1394*t2026*t2124*var3[18] + 36.57599999999999*t1815*t2026*t2124*var3[18] - 32.512*t1394*t2332*t2335*var3[18] + 24.383999999999997*t1394*t1728*t2124*t5629*var3[18] - 8.128*t2026*t2335*t5629*var3[18] - 24.384*t1394*t2026*t2124*var3[23] + 8.128*t2332*t2335*var3[23] + 32.512*t1394*t2332*t2335*var3[23] - 10.16*t3544*t5152*var3[23] + 8.128*t2026*t2335*t5629*var3[23] - 8.128*t2332*t2335*var3[28] + 10.16*t3544*t5152*var3[28]);
  p_output1[58]=t7888;
  p_output1[59]=t7888;
  p_output1[60]=-1.*t7869*var2[2] - 1.*t7869*var2[6] - 1.*var2[7]*(3.3032192*t1399*t532*var3[4] + 9.9096576*t1235*t1728*t1815*var3[9] - 6.6064384*t1399*t532*var3[9] - 19.8193152*t1235*t1728*t1815*var3[14] + 9.9096576*t1394*t2026*t2124*var3[14] + 3.3032192*t1399*t532*var3[14] + 9.9096576*t1235*t1728*t1815*var3[19] - 19.8193152*t1394*t2026*t2124*var3[19] + 3.3032192*t2332*t2335*var3[19] + 9.9096576*t1394*t2026*t2124*var3[24] - 6.6064384*t2332*t2335*var3[24] + 3.3032192*t2332*t2335*var3[29]);
  p_output1[61]=t7921;
  p_output1[62]=1.;
  p_output1[63]=t7921;
  p_output1[64]=2.032*t3334*t767*var3[4] + 8.128*t1235*t1399*t532*var3[9] - 2.032*t3334*t767*var3[9] + 12.191999999999998*t1728*t1815*t2124*var3[14] - 8.128*t1235*t1399*t532*var3[14] - 12.191999999999998*t1728*t1815*t2124*var3[19] + 8.128*t1394*t2026*t2335*var3[19] - 8.128*t1394*t2026*t2335*var3[24] + 2.032*t2332*t3544*var3[24] - 2.032*t2332*t3544*var3[29];
  p_output1[65]=t4168;
  p_output1[66]=t4373;
  p_output1[67]=t4485;
  p_output1[68]=t4624;
  p_output1[69]=t4831;
  p_output1[70]=t4871;
  p_output1[71]=-1.*t7950*var2[2] - 1.*t7950*var2[6] - 1.*var2[7]*(-8.128*t1235*t1399*t1728*var3[4] + 2.032*t3334*t532*var3[4] + 24.384*t1235*t1399*t1728*var3[9] - 24.384*t1815*t2026*t2124*var3[9] - 2.032*t3334*t532*var3[9] - 16.256*t1235*t1399*t1728*var3[14] + 60.959999999999994*t1815*t2026*t2124*var3[14] - 24.383999999999997*t1394*t2332*t2335*var3[14] - 36.57599999999999*t1815*t2026*t2124*var3[19] + 56.896*t1394*t2332*t2335*var3[19] - 8.128*t3544*t5152*var3[19] - 32.512*t1394*t2332*t2335*var3[24] + 18.288*t3544*t5152*var3[24] - 10.16*t3544*t5152*var3[29]);
  p_output1[72]=-1.*t8026*var2[2] - 1.*t8026*var2[6] - 1.*var2[7]*(-2.032*t3334*t532*var3[4] - 8.128*t1399*t5629*t767*var3[4] - 16.256*t1235*t1399*t1728*var3[9] + 8.128*t1399*t532*var3[9] + 2.032*t3334*t532*var3[9] - 24.384*t1235*t1815*t532*t5629*var3[9] + 8.128*t1399*t5629*t767*var3[9] + 16.256*t1235*t1399*t1728*var3[14] + 24.383999999999997*t1235*t1728*t1815*var3[14] - 36.57599999999999*t1815*t2026*t2124*var3[14] - 8.128*t1399*t532*var3[14] - 24.383999999999997*t1394*t1728*t2124*t5629*var3[14] + 24.384*t1235*t1815*t532*t5629*var3[14] - 24.383999999999997*t1235*t1728*t1815*var3[19] + 24.384*t1394*t2026*t2124*var3[19] + 36.57599999999999*t1815*t2026*t2124*var3[19] - 32.512*t1394*t2332*t2335*var3[19] + 24.383999999999997*t1394*t1728*t2124*t5629*var3[19] - 8.128*t2026*t2335*t5629*var3[19] - 24.384*t1394*t2026*t2124*var3[24] + 8.128*t2332*t2335*var3[24] + 32.512*t1394*t2332*t2335*var3[24] - 10.16*t3544*t5152*var3[24] + 8.128*t2026*t2335*t5629*var3[24] - 8.128*t2332*t2335*var3[29] + 10.16*t3544*t5152*var3[29]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 9 && ncols == 1) && 
      !(mrows == 1 && ncols == 9))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 9 && ncols == 1) && 
      !(mrows == 1 && ncols == 9))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 2 && ncols == 1) && 
      !(mrows == 1 && ncols == 2))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 73, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "J_d1y_position_RightSS1.hh"

namespace RightSS1
{

void J_d1y_position_RightSS1_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
