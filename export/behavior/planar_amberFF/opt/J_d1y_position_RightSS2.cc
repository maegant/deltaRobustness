/*
 * Automatically Generated from Mathematica.
 * Wed 1 Mar 2023 15:18:23 GMT-08:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t157;
  double t501;
  double t506;
  double t526;
  double t1173;
  double t1279;
  double t1366;
  double t1376;
  double t1413;
  double t1454;
  double t1472;
  double t2145;
  double t2219;
  double t2284;
  double t2341;
  double t2410;
  double t2412;
  double t2511;
  double t2579;
  double t2581;
  double t2623;
  double t2712;
  double t2713;
  double t2831;
  double t2923;
  double t2963;
  double t2995;
  double t3012;
  double t3064;
  double t3078;
  double t1785;
  double t2065;
  double t2066;
  double t2230;
  double t2245;
  double t2275;
  double t2357;
  double t2358;
  double t2370;
  double t2420;
  double t2446;
  double t2485;
  double t2493;
  double t2505;
  double t3111;
  double t3126;
  double t3171;
  double t3473;
  double t3566;
  double t3487;
  double t3494;
  double t3518;
  double t3521;
  double t3522;
  double t3524;
  double t3540;
  double t3543;
  double t3586;
  double t3642;
  double t4181;
  double t4186;
  double t4221;
  double t4571;
  double t4637;
  double t4641;
  double t4856;
  double t4884;
  double t4893;
  double t5044;
  double t5049;
  double t5091;
  double t5527;
  double t5249;
  double t5251;
  double t5256;
  double t5280;
  double t5329;
  double t5344;
  double t5346;
  double t5429;
  double t5448;
  double t5458;
  double t5484;
  double t5544;
  double t5546;
  double t5555;
  double t5556;
  double t5819;
  double t5840;
  double t6151;
  double t6158;
  double t6160;
  double t6162;
  double t6163;
  double t6167;
  double t6171;
  double t6202;
  double t6217;
  double t6265;
  double t6267;
  double t6297;
  double t6314;
  double t6318;
  double t6348;
  double t6376;
  double t6402;
  double t6414;
  double t6417;
  double t6451;
  double t6455;
  double t6481;
  double t6482;
  double t6487;
  double t6489;
  double t6512;
  double t6515;
  double t6649;
  double t6688;
  double t6718;
  double t6720;
  double t6739;
  double t6751;
  double t6765;
  double t6800;
  double t6821;
  double t6835;
  double t6839;
  double t6877;
  double t6878;
  double t6546;
  double t6548;
  double t6560;
  double t6571;
  double t6574;
  double t6578;
  double t6583;
  double t6595;
  double t6620;
  double t6621;
  double t6638;
  double t6642;
  double t6645;
  double t6646;
  double t6905;
  double t6922;
  double t6932;
  double t7048;
  double t7055;
  double t7057;
  double t7067;
  double t7094;
  double t7098;
  double t7117;
  double t7122;
  double t7123;
  double t7126;
  double t7141;
  double t3971;
  double t4029;
  double t4071;
  double t4076;
  double t4244;
  double t4356;
  double t4358;
  double t4416;
  double t4437;
  double t4504;
  double t4517;
  double t4737;
  double t4741;
  double t4747;
  double t4758;
  double t4779;
  double t4790;
  double t4805;
  double t4913;
  double t4950;
  double t4955;
  double t4970;
  double t4992;
  double t5024;
  double t5034;
  double t5098;
  double t5099;
  double t5115;
  double t5130;
  double t5131;
  double t5132;
  double t5155;
  double t5219;
  double t5221;
  double t5226;
  double t5231;
  double t7215;
  double t7226;
  double t7230;
  double t7244;
  double t7246;
  double t7258;
  double t7266;
  double t7292;
  double t7297;
  double t7300;
  double t7303;
  double t7316;
  double t7319;
  double t7322;
  double t7324;
  double t7646;
  double t7651;
  double t7657;
  double t7665;
  double t7668;
  double t7669;
  double t7670;
  double t7679;
  double t7680;
  double t7683;
  double t7689;
  double t7692;
  double t7693;
  double t7698;
  double t7700;
  double t7703;
  double t7705;
  double t7706;
  double t7707;
  double t7708;
  double t7710;
  double t7711;
  double t7712;
  double t7713;
  double t7714;
  double t7715;
  double t7716;
  double t7744;
  double t7745;
  double t7749;
  double t7750;
  double t7751;
  double t7752;
  double t7753;
  double t7754;
  double t7755;
  double t7756;
  double t7757;
  double t7758;
  double t7759;
  double t7722;
  double t7723;
  double t7724;
  double t7725;
  double t7726;
  double t7729;
  double t7730;
  double t7734;
  double t7735;
  double t7736;
  double t7737;
  double t7739;
  double t7740;
  double t7741;
  double t7760;
  double t7761;
  double t7762;
  double t7787;
  double t7795;
  double t7796;
  double t7798;
  double t7799;
  double t7800;
  double t7801;
  double t7802;
  double t7804;
  double t7805;
  double t7806;
  double t7826;
  double t7828;
  double t7829;
  double t7830;
  double t7831;
  double t7832;
  double t7835;
  double t7838;
  double t7839;
  double t7841;
  double t7842;
  double t7843;
  double t7844;
  double t7845;
  double t7846;
  double t7959;
  double t7960;
  double t7967;
  double t7968;
  double t7970;
  double t7971;
  double t7972;
  double t7973;
  double t7974;
  double t7975;
  double t7978;
  double t7979;
  double t7982;
  double t7983;
  double t7984;
  double t7985;
  double t7986;
  double t7990;
  double t7991;
  double t7992;
  double t7993;
  double t7994;
  double t7995;
  double t7996;
  double t7997;
  double t7998;
  double t7999;
  double t8020;
  double t8021;
  double t8022;
  double t8023;
  double t8024;
  double t8025;
  double t8027;
  double t8028;
  double t8029;
  double t8030;
  double t8031;
  double t8032;
  double t8033;
  double t8004;
  double t8005;
  double t8006;
  double t8009;
  double t8010;
  double t8011;
  double t8012;
  double t8013;
  double t8014;
  double t8015;
  double t8016;
  double t8017;
  double t8018;
  double t8019;
  double t8034;
  double t8035;
  double t8036;
  double t8054;
  double t8055;
  double t8056;
  double t8057;
  double t8058;
  double t8059;
  double t8060;
  double t8061;
  double t8062;
  double t8063;
  double t8065;
  double t8078;
  double t8079;
  double t8080;
  double t8081;
  double t8082;
  double t8083;
  double t8084;
  double t8085;
  double t8086;
  double t8087;
  double t8088;
  double t8089;
  double t8090;
  double t8091;
  double t8092;
  double t8142;
  double t8143;
  double t8144;
  double t8145;
  double t8146;
  double t8147;
  double t8148;
  double t8149;
  double t8150;
  double t8151;
  double t8152;
  double t8153;
  double t8154;
  double t8155;
  double t8156;
  double t8157;
  double t8158;
  double t8159;
  double t8160;
  double t8161;
  double t8162;
  double t8163;
  double t8164;
  double t8165;
  double t8166;
  double t8167;
  double t8168;
  double t8192;
  double t8194;
  double t8195;
  double t8196;
  double t8197;
  double t8198;
  double t8199;
  double t8200;
  double t8201;
  double t8202;
  double t8203;
  double t8204;
  double t8205;
  double t8176;
  double t8177;
  double t8178;
  double t8179;
  double t8180;
  double t8181;
  double t8182;
  double t8183;
  double t8185;
  double t8186;
  double t8187;
  double t8188;
  double t8189;
  double t8190;
  double t8206;
  double t8207;
  double t8208;
  double t8228;
  double t8230;
  double t8231;
  double t8232;
  double t8233;
  double t8234;
  double t8235;
  double t8236;
  double t8237;
  double t8239;
  double t8240;
  double t8253;
  double t8256;
  double t8257;
  double t8258;
  double t8259;
  double t8260;
  double t8261;
  double t8262;
  double t8263;
  double t8264;
  double t8265;
  double t8266;
  double t8267;
  double t8271;
  double t8272;
  double t8327;
  double t8328;
  double t8329;
  double t8330;
  double t8331;
  double t8332;
  double t8333;
  double t8334;
  double t8335;
  double t8336;
  double t8337;
  double t8338;
  double t8339;
  double t8340;
  double t8341;
  double t8342;
  double t8343;
  double t8344;
  double t8345;
  double t8346;
  double t8347;
  double t8348;
  double t8349;
  double t8350;
  double t8351;
  double t8352;
  double t8353;
  t157 = -1.*var4[1];
  t501 = var4[0] + t157;
  t506 = Power(t501,-2);
  t526 = 1/t501;
  t1173 = 0.8128*var1[2];
  t1279 = 0.8128*var1[6];
  t1366 = 0.4064*var1[7];
  t1376 = 0. + t157 + t1173 + t1279 + t1366;
  t1413 = -1.*t526*t1376;
  t1454 = 1. + t1413;
  t1472 = Power(t1454,3);
  t2145 = Power(t501,-3);
  t2219 = Power(t1454,2);
  t2284 = Power(t501,-4);
  t2341 = Power(t1376,2);
  t2410 = Power(t501,-5);
  t2412 = Power(t1376,3);
  t2511 = 13.2128768*var3[0]*t506*t1472;
  t2579 = -26.4257536*var3[5]*t506*t1472;
  t2581 = 13.2128768*var3[10]*t506*t1472;
  t2623 = 39.6386304*var3[5]*t2145*t2219*t1376;
  t2712 = -79.2772608*var3[10]*t2145*t2219*t1376;
  t2713 = 39.6386304*var3[15]*t2145*t2219*t1376;
  t2831 = 39.6386304*var3[10]*t2284*t1454*t2341;
  t2923 = -79.2772608*var3[15]*t2284*t1454*t2341;
  t2963 = 39.6386304*var3[20]*t2284*t1454*t2341;
  t2995 = 13.2128768*var3[15]*t2410*t2412;
  t3012 = -26.4257536*var3[20]*t2410*t2412;
  t3064 = 13.2128768*var3[25]*t2410*t2412;
  t3078 = t2511 + t2579 + t2581 + t2623 + t2712 + t2713 + t2831 + t2923 + t2963 + t2995 + t3012 + t3064;
  t1785 = 6.6064384*var3[0]*t506*t1472;
  t2065 = -13.2128768*var3[5]*t506*t1472;
  t2066 = 6.6064384*var3[10]*t506*t1472;
  t2230 = 19.8193152*var3[5]*t2145*t2219*t1376;
  t2245 = -39.6386304*var3[10]*t2145*t2219*t1376;
  t2275 = 19.8193152*var3[15]*t2145*t2219*t1376;
  t2357 = 19.8193152*var3[10]*t2284*t1454*t2341;
  t2358 = -39.6386304*var3[15]*t2284*t1454*t2341;
  t2370 = 19.8193152*var3[20]*t2284*t1454*t2341;
  t2420 = 6.6064384*var3[15]*t2410*t2412;
  t2446 = -13.2128768*var3[20]*t2410*t2412;
  t2485 = 6.6064384*var3[25]*t2410*t2412;
  t2493 = t1785 + t2065 + t2066 + t2230 + t2245 + t2275 + t2357 + t2358 + t2370 + t2420 + t2446 + t2485;
  t2505 = -1.*var2[7]*t2493;
  t3111 = -1.*var2[2]*t3078;
  t3126 = -1.*var2[6]*t3078;
  t3171 = t2505 + t3111 + t3126;
  t3473 = Power(t1454,4);
  t3566 = Power(t1376,4);
  t3487 = 4.064*var3[0]*t526*t3473;
  t3494 = -4.064*var3[5]*t526*t3473;
  t3518 = 16.256*var3[5]*t506*t1472*t1376;
  t3521 = -16.256*var3[10]*t506*t1472*t1376;
  t3522 = 24.383999999999997*var3[10]*t2145*t2219*t2341;
  t3524 = -24.383999999999997*var3[15]*t2145*t2219*t2341;
  t3540 = 16.256*var3[15]*t2284*t1454*t2412;
  t3543 = -16.256*var3[20]*t2284*t1454*t2412;
  t3586 = 4.064*var3[20]*t2410*t3566;
  t3642 = -4.064*var3[25]*t2410*t3566;
  t4181 = 4.064*t526*t3473;
  t4186 = -16.256*t506*t1472*t1376;
  t4221 = t4181 + t4186;
  t4571 = 16.256*t506*t1472*t1376;
  t4637 = -24.383999999999997*t2145*t2219*t2341;
  t4641 = t4571 + t4637;
  t4856 = 24.383999999999997*t2145*t2219*t2341;
  t4884 = -16.256*t2284*t1454*t2412;
  t4893 = t4856 + t4884;
  t5044 = 16.256*t2284*t1454*t2412;
  t5049 = -4.064*t2410*t3566;
  t5091 = t5044 + t5049;
  t5527 = Power(t501,-6);
  t5249 = 4.064*var3[0]*t506*t3473;
  t5251 = -4.064*var3[5]*t506*t3473;
  t5256 = -16.256*var3[0]*t2145*t1472*t1376;
  t5280 = 48.768*var3[5]*t2145*t1472*t1376;
  t5329 = -32.512*var3[10]*t2145*t1472*t1376;
  t5344 = -48.768*var3[5]*t2284*t2219*t2341;
  t5346 = 121.91999999999999*var3[10]*t2284*t2219*t2341;
  t5429 = -73.15199999999999*var3[15]*t2284*t2219*t2341;
  t5448 = -48.767999999999994*var3[10]*t2410*t1454*t2412;
  t5458 = 113.792*var3[15]*t2410*t1454*t2412;
  t5484 = -65.024*var3[20]*t2410*t1454*t2412;
  t5544 = -16.256*var3[15]*t5527*t3566;
  t5546 = 36.576*var3[20]*t5527*t3566;
  t5555 = -20.32*var3[25]*t5527*t3566;
  t5556 = t5249 + t5251 + t5256 + t5280 + t5329 + t5344 + t5346 + t5429 + t5448 + t5458 + t5484 + t5544 + t5546 + t5555;
  t5819 = -1.*t506*t1376;
  t5840 = t526 + t5819;
  t6151 = 16.256*var3[5]*t506*t1472;
  t6158 = -16.256*var3[10]*t506*t1472;
  t6160 = -16.256*var3[0]*t526*t5840*t1472;
  t6162 = 16.256*var3[5]*t526*t5840*t1472;
  t6163 = -4.064*var3[0]*t506*t3473;
  t6167 = 4.064*var3[5]*t506*t3473;
  t6171 = 48.767999999999994*var3[10]*t2145*t2219*t1376;
  t6202 = -48.767999999999994*var3[15]*t2145*t2219*t1376;
  t6217 = -48.768*var3[5]*t506*t5840*t2219*t1376;
  t6265 = 48.768*var3[10]*t506*t5840*t2219*t1376;
  t6267 = -32.512*var3[5]*t2145*t1472*t1376;
  t6297 = 32.512*var3[10]*t2145*t1472*t1376;
  t6314 = 48.768*var3[15]*t2284*t1454*t2341;
  t6318 = -48.768*var3[20]*t2284*t1454*t2341;
  t6348 = -48.767999999999994*var3[10]*t2145*t5840*t1454*t2341;
  t6376 = 48.767999999999994*var3[15]*t2145*t5840*t1454*t2341;
  t6402 = -73.15199999999999*var3[10]*t2284*t2219*t2341;
  t6414 = 73.15199999999999*var3[15]*t2284*t2219*t2341;
  t6417 = 16.256*var3[20]*t2410*t2412;
  t6451 = -16.256*var3[25]*t2410*t2412;
  t6455 = -16.256*var3[15]*t2284*t5840*t2412;
  t6481 = 16.256*var3[20]*t2284*t5840*t2412;
  t6482 = -65.024*var3[15]*t2410*t1454*t2412;
  t6487 = 65.024*var3[20]*t2410*t1454*t2412;
  t6489 = -20.32*var3[20]*t5527*t3566;
  t6512 = 20.32*var3[25]*t5527*t3566;
  t6515 = t6151 + t6158 + t6160 + t6162 + t6163 + t6167 + t6171 + t6202 + t6217 + t6265 + t6267 + t6297 + t6314 + t6318 + t6348 + t6376 + t6402 + t6414 + t6417 + t6451 + t6455 + t6481 + t6482 + t6487 + t6489 + t6512;
  t6649 = 13.2128768*var3[1]*t506*t1472;
  t6688 = -26.4257536*var3[6]*t506*t1472;
  t6718 = 13.2128768*var3[11]*t506*t1472;
  t6720 = 39.6386304*var3[6]*t2145*t2219*t1376;
  t6739 = -79.2772608*var3[11]*t2145*t2219*t1376;
  t6751 = 39.6386304*var3[16]*t2145*t2219*t1376;
  t6765 = 39.6386304*var3[11]*t2284*t1454*t2341;
  t6800 = -79.2772608*var3[16]*t2284*t1454*t2341;
  t6821 = 39.6386304*var3[21]*t2284*t1454*t2341;
  t6835 = 13.2128768*var3[16]*t2410*t2412;
  t6839 = -26.4257536*var3[21]*t2410*t2412;
  t6877 = 13.2128768*var3[26]*t2410*t2412;
  t6878 = t6649 + t6688 + t6718 + t6720 + t6739 + t6751 + t6765 + t6800 + t6821 + t6835 + t6839 + t6877;
  t6546 = 6.6064384*var3[1]*t506*t1472;
  t6548 = -13.2128768*var3[6]*t506*t1472;
  t6560 = 6.6064384*var3[11]*t506*t1472;
  t6571 = 19.8193152*var3[6]*t2145*t2219*t1376;
  t6574 = -39.6386304*var3[11]*t2145*t2219*t1376;
  t6578 = 19.8193152*var3[16]*t2145*t2219*t1376;
  t6583 = 19.8193152*var3[11]*t2284*t1454*t2341;
  t6595 = -39.6386304*var3[16]*t2284*t1454*t2341;
  t6620 = 19.8193152*var3[21]*t2284*t1454*t2341;
  t6621 = 6.6064384*var3[16]*t2410*t2412;
  t6638 = -13.2128768*var3[21]*t2410*t2412;
  t6642 = 6.6064384*var3[26]*t2410*t2412;
  t6645 = t6546 + t6548 + t6560 + t6571 + t6574 + t6578 + t6583 + t6595 + t6620 + t6621 + t6638 + t6642;
  t6646 = -1.*var2[7]*t6645;
  t6905 = -1.*var2[2]*t6878;
  t6922 = -1.*var2[6]*t6878;
  t6932 = t6646 + t6905 + t6922;
  t7048 = 4.064*var3[1]*t526*t3473;
  t7055 = -4.064*var3[6]*t526*t3473;
  t7057 = 16.256*var3[6]*t506*t1472*t1376;
  t7067 = -16.256*var3[11]*t506*t1472*t1376;
  t7094 = 24.383999999999997*var3[11]*t2145*t2219*t2341;
  t7098 = -24.383999999999997*var3[16]*t2145*t2219*t2341;
  t7117 = 16.256*var3[16]*t2284*t1454*t2412;
  t7122 = -16.256*var3[21]*t2284*t1454*t2412;
  t7123 = 4.064*var3[21]*t2410*t3566;
  t7126 = -4.064*var3[26]*t2410*t3566;
  t7141 = t7048 + t7055 + t7057 + t7067 + t7094 + t7098 + t7117 + t7122 + t7123 + t7126;
  t3971 = 4.064*var2[2]*t526*t3473;
  t4029 = 4.064*var2[6]*t526*t3473;
  t4071 = 2.032*var2[7]*t526*t3473;
  t4076 = t3971 + t4029 + t4071;
  t4244 = -1.*var2[2]*t4221;
  t4356 = -1.*var2[6]*t4221;
  t4358 = 2.032*t526*t3473;
  t4416 = -8.128*t506*t1472*t1376;
  t4437 = t4358 + t4416;
  t4504 = -1.*var2[7]*t4437;
  t4517 = t4244 + t4356 + t4504;
  t4737 = -1.*var2[2]*t4641;
  t4741 = -1.*var2[6]*t4641;
  t4747 = 8.128*t506*t1472*t1376;
  t4758 = -12.191999999999998*t2145*t2219*t2341;
  t4779 = t4747 + t4758;
  t4790 = -1.*var2[7]*t4779;
  t4805 = t4737 + t4741 + t4790;
  t4913 = -1.*var2[2]*t4893;
  t4950 = -1.*var2[6]*t4893;
  t4955 = 12.191999999999998*t2145*t2219*t2341;
  t4970 = -8.128*t2284*t1454*t2412;
  t4992 = t4955 + t4970;
  t5024 = -1.*var2[7]*t4992;
  t5034 = t4913 + t4950 + t5024;
  t5098 = -1.*var2[2]*t5091;
  t5099 = -1.*var2[6]*t5091;
  t5115 = 8.128*t2284*t1454*t2412;
  t5130 = -2.032*t2410*t3566;
  t5131 = t5115 + t5130;
  t5132 = -1.*var2[7]*t5131;
  t5155 = t5098 + t5099 + t5132;
  t5219 = -4.064*var2[2]*t2410*t3566;
  t5221 = -4.064*var2[6]*t2410*t3566;
  t5226 = -2.032*var2[7]*t2410*t3566;
  t5231 = t5219 + t5221 + t5226;
  t7215 = 4.064*var3[1]*t506*t3473;
  t7226 = -4.064*var3[6]*t506*t3473;
  t7230 = -16.256*var3[1]*t2145*t1472*t1376;
  t7244 = 48.768*var3[6]*t2145*t1472*t1376;
  t7246 = -32.512*var3[11]*t2145*t1472*t1376;
  t7258 = -48.768*var3[6]*t2284*t2219*t2341;
  t7266 = 121.91999999999999*var3[11]*t2284*t2219*t2341;
  t7292 = -73.15199999999999*var3[16]*t2284*t2219*t2341;
  t7297 = -48.767999999999994*var3[11]*t2410*t1454*t2412;
  t7300 = 113.792*var3[16]*t2410*t1454*t2412;
  t7303 = -65.024*var3[21]*t2410*t1454*t2412;
  t7316 = -16.256*var3[16]*t5527*t3566;
  t7319 = 36.576*var3[21]*t5527*t3566;
  t7322 = -20.32*var3[26]*t5527*t3566;
  t7324 = t7215 + t7226 + t7230 + t7244 + t7246 + t7258 + t7266 + t7292 + t7297 + t7300 + t7303 + t7316 + t7319 + t7322;
  t7646 = 16.256*var3[6]*t506*t1472;
  t7651 = -16.256*var3[11]*t506*t1472;
  t7657 = -16.256*var3[1]*t526*t5840*t1472;
  t7665 = 16.256*var3[6]*t526*t5840*t1472;
  t7668 = -4.064*var3[1]*t506*t3473;
  t7669 = 4.064*var3[6]*t506*t3473;
  t7670 = 48.767999999999994*var3[11]*t2145*t2219*t1376;
  t7679 = -48.767999999999994*var3[16]*t2145*t2219*t1376;
  t7680 = -48.768*var3[6]*t506*t5840*t2219*t1376;
  t7683 = 48.768*var3[11]*t506*t5840*t2219*t1376;
  t7689 = -32.512*var3[6]*t2145*t1472*t1376;
  t7692 = 32.512*var3[11]*t2145*t1472*t1376;
  t7693 = 48.768*var3[16]*t2284*t1454*t2341;
  t7698 = -48.768*var3[21]*t2284*t1454*t2341;
  t7700 = -48.767999999999994*var3[11]*t2145*t5840*t1454*t2341;
  t7703 = 48.767999999999994*var3[16]*t2145*t5840*t1454*t2341;
  t7705 = -73.15199999999999*var3[11]*t2284*t2219*t2341;
  t7706 = 73.15199999999999*var3[16]*t2284*t2219*t2341;
  t7707 = 16.256*var3[21]*t2410*t2412;
  t7708 = -16.256*var3[26]*t2410*t2412;
  t7710 = -16.256*var3[16]*t2284*t5840*t2412;
  t7711 = 16.256*var3[21]*t2284*t5840*t2412;
  t7712 = -65.024*var3[16]*t2410*t1454*t2412;
  t7713 = 65.024*var3[21]*t2410*t1454*t2412;
  t7714 = -20.32*var3[21]*t5527*t3566;
  t7715 = 20.32*var3[26]*t5527*t3566;
  t7716 = t7646 + t7651 + t7657 + t7665 + t7668 + t7669 + t7670 + t7679 + t7680 + t7683 + t7689 + t7692 + t7693 + t7698 + t7700 + t7703 + t7705 + t7706 + t7707 + t7708 + t7710 + t7711 + t7712 + t7713 + t7714 + t7715;
  t7744 = 13.2128768*var3[2]*t506*t1472;
  t7745 = -26.4257536*var3[7]*t506*t1472;
  t7749 = 13.2128768*var3[12]*t506*t1472;
  t7750 = 39.6386304*var3[7]*t2145*t2219*t1376;
  t7751 = -79.2772608*var3[12]*t2145*t2219*t1376;
  t7752 = 39.6386304*var3[17]*t2145*t2219*t1376;
  t7753 = 39.6386304*var3[12]*t2284*t1454*t2341;
  t7754 = -79.2772608*var3[17]*t2284*t1454*t2341;
  t7755 = 39.6386304*var3[22]*t2284*t1454*t2341;
  t7756 = 13.2128768*var3[17]*t2410*t2412;
  t7757 = -26.4257536*var3[22]*t2410*t2412;
  t7758 = 13.2128768*var3[27]*t2410*t2412;
  t7759 = t7744 + t7745 + t7749 + t7750 + t7751 + t7752 + t7753 + t7754 + t7755 + t7756 + t7757 + t7758;
  t7722 = 6.6064384*var3[2]*t506*t1472;
  t7723 = -13.2128768*var3[7]*t506*t1472;
  t7724 = 6.6064384*var3[12]*t506*t1472;
  t7725 = 19.8193152*var3[7]*t2145*t2219*t1376;
  t7726 = -39.6386304*var3[12]*t2145*t2219*t1376;
  t7729 = 19.8193152*var3[17]*t2145*t2219*t1376;
  t7730 = 19.8193152*var3[12]*t2284*t1454*t2341;
  t7734 = -39.6386304*var3[17]*t2284*t1454*t2341;
  t7735 = 19.8193152*var3[22]*t2284*t1454*t2341;
  t7736 = 6.6064384*var3[17]*t2410*t2412;
  t7737 = -13.2128768*var3[22]*t2410*t2412;
  t7739 = 6.6064384*var3[27]*t2410*t2412;
  t7740 = t7722 + t7723 + t7724 + t7725 + t7726 + t7729 + t7730 + t7734 + t7735 + t7736 + t7737 + t7739;
  t7741 = -1.*var2[7]*t7740;
  t7760 = -1.*var2[2]*t7759;
  t7761 = -1.*var2[6]*t7759;
  t7762 = t7741 + t7760 + t7761;
  t7787 = 4.064*var3[2]*t526*t3473;
  t7795 = -4.064*var3[7]*t526*t3473;
  t7796 = 16.256*var3[7]*t506*t1472*t1376;
  t7798 = -16.256*var3[12]*t506*t1472*t1376;
  t7799 = 24.383999999999997*var3[12]*t2145*t2219*t2341;
  t7800 = -24.383999999999997*var3[17]*t2145*t2219*t2341;
  t7801 = 16.256*var3[17]*t2284*t1454*t2412;
  t7802 = -16.256*var3[22]*t2284*t1454*t2412;
  t7804 = 4.064*var3[22]*t2410*t3566;
  t7805 = -4.064*var3[27]*t2410*t3566;
  t7806 = t7787 + t7795 + t7796 + t7798 + t7799 + t7800 + t7801 + t7802 + t7804 + t7805;
  t7826 = 4.064*var3[2]*t506*t3473;
  t7828 = -4.064*var3[7]*t506*t3473;
  t7829 = -16.256*var3[2]*t2145*t1472*t1376;
  t7830 = 48.768*var3[7]*t2145*t1472*t1376;
  t7831 = -32.512*var3[12]*t2145*t1472*t1376;
  t7832 = -48.768*var3[7]*t2284*t2219*t2341;
  t7835 = 121.91999999999999*var3[12]*t2284*t2219*t2341;
  t7838 = -73.15199999999999*var3[17]*t2284*t2219*t2341;
  t7839 = -48.767999999999994*var3[12]*t2410*t1454*t2412;
  t7841 = 113.792*var3[17]*t2410*t1454*t2412;
  t7842 = -65.024*var3[22]*t2410*t1454*t2412;
  t7843 = -16.256*var3[17]*t5527*t3566;
  t7844 = 36.576*var3[22]*t5527*t3566;
  t7845 = -20.32*var3[27]*t5527*t3566;
  t7846 = t7826 + t7828 + t7829 + t7830 + t7831 + t7832 + t7835 + t7838 + t7839 + t7841 + t7842 + t7843 + t7844 + t7845;
  t7959 = 16.256*var3[7]*t506*t1472;
  t7960 = -16.256*var3[12]*t506*t1472;
  t7967 = -16.256*var3[2]*t526*t5840*t1472;
  t7968 = 16.256*var3[7]*t526*t5840*t1472;
  t7970 = -4.064*var3[2]*t506*t3473;
  t7971 = 4.064*var3[7]*t506*t3473;
  t7972 = 48.767999999999994*var3[12]*t2145*t2219*t1376;
  t7973 = -48.767999999999994*var3[17]*t2145*t2219*t1376;
  t7974 = -48.768*var3[7]*t506*t5840*t2219*t1376;
  t7975 = 48.768*var3[12]*t506*t5840*t2219*t1376;
  t7978 = -32.512*var3[7]*t2145*t1472*t1376;
  t7979 = 32.512*var3[12]*t2145*t1472*t1376;
  t7982 = 48.768*var3[17]*t2284*t1454*t2341;
  t7983 = -48.768*var3[22]*t2284*t1454*t2341;
  t7984 = -48.767999999999994*var3[12]*t2145*t5840*t1454*t2341;
  t7985 = 48.767999999999994*var3[17]*t2145*t5840*t1454*t2341;
  t7986 = -73.15199999999999*var3[12]*t2284*t2219*t2341;
  t7990 = 73.15199999999999*var3[17]*t2284*t2219*t2341;
  t7991 = 16.256*var3[22]*t2410*t2412;
  t7992 = -16.256*var3[27]*t2410*t2412;
  t7993 = -16.256*var3[17]*t2284*t5840*t2412;
  t7994 = 16.256*var3[22]*t2284*t5840*t2412;
  t7995 = -65.024*var3[17]*t2410*t1454*t2412;
  t7996 = 65.024*var3[22]*t2410*t1454*t2412;
  t7997 = -20.32*var3[22]*t5527*t3566;
  t7998 = 20.32*var3[27]*t5527*t3566;
  t7999 = t7959 + t7960 + t7967 + t7968 + t7970 + t7971 + t7972 + t7973 + t7974 + t7975 + t7978 + t7979 + t7982 + t7983 + t7984 + t7985 + t7986 + t7990 + t7991 + t7992 + t7993 + t7994 + t7995 + t7996 + t7997 + t7998;
  t8020 = 13.2128768*var3[3]*t506*t1472;
  t8021 = -26.4257536*var3[8]*t506*t1472;
  t8022 = 13.2128768*var3[13]*t506*t1472;
  t8023 = 39.6386304*var3[8]*t2145*t2219*t1376;
  t8024 = -79.2772608*var3[13]*t2145*t2219*t1376;
  t8025 = 39.6386304*var3[18]*t2145*t2219*t1376;
  t8027 = 39.6386304*var3[13]*t2284*t1454*t2341;
  t8028 = -79.2772608*var3[18]*t2284*t1454*t2341;
  t8029 = 39.6386304*var3[23]*t2284*t1454*t2341;
  t8030 = 13.2128768*var3[18]*t2410*t2412;
  t8031 = -26.4257536*var3[23]*t2410*t2412;
  t8032 = 13.2128768*var3[28]*t2410*t2412;
  t8033 = t8020 + t8021 + t8022 + t8023 + t8024 + t8025 + t8027 + t8028 + t8029 + t8030 + t8031 + t8032;
  t8004 = 6.6064384*var3[3]*t506*t1472;
  t8005 = -13.2128768*var3[8]*t506*t1472;
  t8006 = 6.6064384*var3[13]*t506*t1472;
  t8009 = 19.8193152*var3[8]*t2145*t2219*t1376;
  t8010 = -39.6386304*var3[13]*t2145*t2219*t1376;
  t8011 = 19.8193152*var3[18]*t2145*t2219*t1376;
  t8012 = 19.8193152*var3[13]*t2284*t1454*t2341;
  t8013 = -39.6386304*var3[18]*t2284*t1454*t2341;
  t8014 = 19.8193152*var3[23]*t2284*t1454*t2341;
  t8015 = 6.6064384*var3[18]*t2410*t2412;
  t8016 = -13.2128768*var3[23]*t2410*t2412;
  t8017 = 6.6064384*var3[28]*t2410*t2412;
  t8018 = t8004 + t8005 + t8006 + t8009 + t8010 + t8011 + t8012 + t8013 + t8014 + t8015 + t8016 + t8017;
  t8019 = -1.*var2[7]*t8018;
  t8034 = -1.*var2[2]*t8033;
  t8035 = -1.*var2[6]*t8033;
  t8036 = t8019 + t8034 + t8035;
  t8054 = 4.064*var3[3]*t526*t3473;
  t8055 = -4.064*var3[8]*t526*t3473;
  t8056 = 16.256*var3[8]*t506*t1472*t1376;
  t8057 = -16.256*var3[13]*t506*t1472*t1376;
  t8058 = 24.383999999999997*var3[13]*t2145*t2219*t2341;
  t8059 = -24.383999999999997*var3[18]*t2145*t2219*t2341;
  t8060 = 16.256*var3[18]*t2284*t1454*t2412;
  t8061 = -16.256*var3[23]*t2284*t1454*t2412;
  t8062 = 4.064*var3[23]*t2410*t3566;
  t8063 = -4.064*var3[28]*t2410*t3566;
  t8065 = t8054 + t8055 + t8056 + t8057 + t8058 + t8059 + t8060 + t8061 + t8062 + t8063;
  t8078 = 4.064*var3[3]*t506*t3473;
  t8079 = -4.064*var3[8]*t506*t3473;
  t8080 = -16.256*var3[3]*t2145*t1472*t1376;
  t8081 = 48.768*var3[8]*t2145*t1472*t1376;
  t8082 = -32.512*var3[13]*t2145*t1472*t1376;
  t8083 = -48.768*var3[8]*t2284*t2219*t2341;
  t8084 = 121.91999999999999*var3[13]*t2284*t2219*t2341;
  t8085 = -73.15199999999999*var3[18]*t2284*t2219*t2341;
  t8086 = -48.767999999999994*var3[13]*t2410*t1454*t2412;
  t8087 = 113.792*var3[18]*t2410*t1454*t2412;
  t8088 = -65.024*var3[23]*t2410*t1454*t2412;
  t8089 = -16.256*var3[18]*t5527*t3566;
  t8090 = 36.576*var3[23]*t5527*t3566;
  t8091 = -20.32*var3[28]*t5527*t3566;
  t8092 = t8078 + t8079 + t8080 + t8081 + t8082 + t8083 + t8084 + t8085 + t8086 + t8087 + t8088 + t8089 + t8090 + t8091;
  t8142 = 16.256*var3[8]*t506*t1472;
  t8143 = -16.256*var3[13]*t506*t1472;
  t8144 = -16.256*var3[3]*t526*t5840*t1472;
  t8145 = 16.256*var3[8]*t526*t5840*t1472;
  t8146 = -4.064*var3[3]*t506*t3473;
  t8147 = 4.064*var3[8]*t506*t3473;
  t8148 = 48.767999999999994*var3[13]*t2145*t2219*t1376;
  t8149 = -48.767999999999994*var3[18]*t2145*t2219*t1376;
  t8150 = -48.768*var3[8]*t506*t5840*t2219*t1376;
  t8151 = 48.768*var3[13]*t506*t5840*t2219*t1376;
  t8152 = -32.512*var3[8]*t2145*t1472*t1376;
  t8153 = 32.512*var3[13]*t2145*t1472*t1376;
  t8154 = 48.768*var3[18]*t2284*t1454*t2341;
  t8155 = -48.768*var3[23]*t2284*t1454*t2341;
  t8156 = -48.767999999999994*var3[13]*t2145*t5840*t1454*t2341;
  t8157 = 48.767999999999994*var3[18]*t2145*t5840*t1454*t2341;
  t8158 = -73.15199999999999*var3[13]*t2284*t2219*t2341;
  t8159 = 73.15199999999999*var3[18]*t2284*t2219*t2341;
  t8160 = 16.256*var3[23]*t2410*t2412;
  t8161 = -16.256*var3[28]*t2410*t2412;
  t8162 = -16.256*var3[18]*t2284*t5840*t2412;
  t8163 = 16.256*var3[23]*t2284*t5840*t2412;
  t8164 = -65.024*var3[18]*t2410*t1454*t2412;
  t8165 = 65.024*var3[23]*t2410*t1454*t2412;
  t8166 = -20.32*var3[23]*t5527*t3566;
  t8167 = 20.32*var3[28]*t5527*t3566;
  t8168 = t8142 + t8143 + t8144 + t8145 + t8146 + t8147 + t8148 + t8149 + t8150 + t8151 + t8152 + t8153 + t8154 + t8155 + t8156 + t8157 + t8158 + t8159 + t8160 + t8161 + t8162 + t8163 + t8164 + t8165 + t8166 + t8167;
  t8192 = 13.2128768*var3[4]*t506*t1472;
  t8194 = -26.4257536*var3[9]*t506*t1472;
  t8195 = 13.2128768*var3[14]*t506*t1472;
  t8196 = 39.6386304*var3[9]*t2145*t2219*t1376;
  t8197 = -79.2772608*var3[14]*t2145*t2219*t1376;
  t8198 = 39.6386304*var3[19]*t2145*t2219*t1376;
  t8199 = 39.6386304*var3[14]*t2284*t1454*t2341;
  t8200 = -79.2772608*var3[19]*t2284*t1454*t2341;
  t8201 = 39.6386304*var3[24]*t2284*t1454*t2341;
  t8202 = 13.2128768*var3[19]*t2410*t2412;
  t8203 = -26.4257536*var3[24]*t2410*t2412;
  t8204 = 13.2128768*var3[29]*t2410*t2412;
  t8205 = t8192 + t8194 + t8195 + t8196 + t8197 + t8198 + t8199 + t8200 + t8201 + t8202 + t8203 + t8204;
  t8176 = 6.6064384*var3[4]*t506*t1472;
  t8177 = -13.2128768*var3[9]*t506*t1472;
  t8178 = 6.6064384*var3[14]*t506*t1472;
  t8179 = 19.8193152*var3[9]*t2145*t2219*t1376;
  t8180 = -39.6386304*var3[14]*t2145*t2219*t1376;
  t8181 = 19.8193152*var3[19]*t2145*t2219*t1376;
  t8182 = 19.8193152*var3[14]*t2284*t1454*t2341;
  t8183 = -39.6386304*var3[19]*t2284*t1454*t2341;
  t8185 = 19.8193152*var3[24]*t2284*t1454*t2341;
  t8186 = 6.6064384*var3[19]*t2410*t2412;
  t8187 = -13.2128768*var3[24]*t2410*t2412;
  t8188 = 6.6064384*var3[29]*t2410*t2412;
  t8189 = t8176 + t8177 + t8178 + t8179 + t8180 + t8181 + t8182 + t8183 + t8185 + t8186 + t8187 + t8188;
  t8190 = -1.*var2[7]*t8189;
  t8206 = -1.*var2[2]*t8205;
  t8207 = -1.*var2[6]*t8205;
  t8208 = t8190 + t8206 + t8207;
  t8228 = 4.064*var3[4]*t526*t3473;
  t8230 = -4.064*var3[9]*t526*t3473;
  t8231 = 16.256*var3[9]*t506*t1472*t1376;
  t8232 = -16.256*var3[14]*t506*t1472*t1376;
  t8233 = 24.383999999999997*var3[14]*t2145*t2219*t2341;
  t8234 = -24.383999999999997*var3[19]*t2145*t2219*t2341;
  t8235 = 16.256*var3[19]*t2284*t1454*t2412;
  t8236 = -16.256*var3[24]*t2284*t1454*t2412;
  t8237 = 4.064*var3[24]*t2410*t3566;
  t8239 = -4.064*var3[29]*t2410*t3566;
  t8240 = t8228 + t8230 + t8231 + t8232 + t8233 + t8234 + t8235 + t8236 + t8237 + t8239;
  t8253 = 4.064*var3[4]*t506*t3473;
  t8256 = -4.064*var3[9]*t506*t3473;
  t8257 = -16.256*var3[4]*t2145*t1472*t1376;
  t8258 = 48.768*var3[9]*t2145*t1472*t1376;
  t8259 = -32.512*var3[14]*t2145*t1472*t1376;
  t8260 = -48.768*var3[9]*t2284*t2219*t2341;
  t8261 = 121.91999999999999*var3[14]*t2284*t2219*t2341;
  t8262 = -73.15199999999999*var3[19]*t2284*t2219*t2341;
  t8263 = -48.767999999999994*var3[14]*t2410*t1454*t2412;
  t8264 = 113.792*var3[19]*t2410*t1454*t2412;
  t8265 = -65.024*var3[24]*t2410*t1454*t2412;
  t8266 = -16.256*var3[19]*t5527*t3566;
  t8267 = 36.576*var3[24]*t5527*t3566;
  t8271 = -20.32*var3[29]*t5527*t3566;
  t8272 = t8253 + t8256 + t8257 + t8258 + t8259 + t8260 + t8261 + t8262 + t8263 + t8264 + t8265 + t8266 + t8267 + t8271;
  t8327 = 16.256*var3[9]*t506*t1472;
  t8328 = -16.256*var3[14]*t506*t1472;
  t8329 = -16.256*var3[4]*t526*t5840*t1472;
  t8330 = 16.256*var3[9]*t526*t5840*t1472;
  t8331 = -4.064*var3[4]*t506*t3473;
  t8332 = 4.064*var3[9]*t506*t3473;
  t8333 = 48.767999999999994*var3[14]*t2145*t2219*t1376;
  t8334 = -48.767999999999994*var3[19]*t2145*t2219*t1376;
  t8335 = -48.768*var3[9]*t506*t5840*t2219*t1376;
  t8336 = 48.768*var3[14]*t506*t5840*t2219*t1376;
  t8337 = -32.512*var3[9]*t2145*t1472*t1376;
  t8338 = 32.512*var3[14]*t2145*t1472*t1376;
  t8339 = 48.768*var3[19]*t2284*t1454*t2341;
  t8340 = -48.768*var3[24]*t2284*t1454*t2341;
  t8341 = -48.767999999999994*var3[14]*t2145*t5840*t1454*t2341;
  t8342 = 48.767999999999994*var3[19]*t2145*t5840*t1454*t2341;
  t8343 = -73.15199999999999*var3[14]*t2284*t2219*t2341;
  t8344 = 73.15199999999999*var3[19]*t2284*t2219*t2341;
  t8345 = 16.256*var3[24]*t2410*t2412;
  t8346 = -16.256*var3[29]*t2410*t2412;
  t8347 = -16.256*var3[19]*t2284*t5840*t2412;
  t8348 = 16.256*var3[24]*t2284*t5840*t2412;
  t8349 = -65.024*var3[19]*t2410*t1454*t2412;
  t8350 = 65.024*var3[24]*t2410*t1454*t2412;
  t8351 = -20.32*var3[24]*t5527*t3566;
  t8352 = 20.32*var3[29]*t5527*t3566;
  t8353 = t8327 + t8328 + t8329 + t8330 + t8331 + t8332 + t8333 + t8334 + t8335 + t8336 + t8337 + t8338 + t8339 + t8340 + t8341 + t8342 + t8343 + t8344 + t8345 + t8346 + t8347 + t8348 + t8349 + t8350 + t8351 + t8352;
  p_output1[0]=t3171;
  p_output1[1]=t3171;
  p_output1[2]=-1.*t2493*var2[2] - 1.*t2493*var2[6] - 1.*var2[7]*(3.3032192*t1472*t506*var3[0] + 9.9096576*t1376*t2145*t2219*var3[5] - 6.6064384*t1472*t506*var3[5] - 19.8193152*t1376*t2145*t2219*var3[10] + 9.9096576*t1454*t2284*t2341*var3[10] + 3.3032192*t1472*t506*var3[10] + 9.9096576*t1376*t2145*t2219*var3[15] - 19.8193152*t1454*t2284*t2341*var3[15] + 3.3032192*t2410*t2412*var3[15] + 9.9096576*t1454*t2284*t2341*var3[20] - 6.6064384*t2410*t2412*var3[20] + 3.3032192*t2410*t2412*var3[25]);
  p_output1[3]=t3487 + t3494 + t3518 + t3521 + t3522 + t3524 + t3540 + t3543 + t3586 + t3642;
  p_output1[4]=1. + t3487 + t3494 + t3518 + t3521 + t3522 + t3524 + t3540 + t3543 + t3586 + t3642;
  p_output1[5]=2.032*t3473*t526*var3[0] + 8.128*t1376*t1472*t506*var3[5] - 2.032*t3473*t526*var3[5] + 12.191999999999998*t2145*t2219*t2341*var3[10] - 8.128*t1376*t1472*t506*var3[10] - 12.191999999999998*t2145*t2219*t2341*var3[15] + 8.128*t1454*t2284*t2412*var3[15] - 8.128*t1454*t2284*t2412*var3[20] + 2.032*t2410*t3566*var3[20] - 2.032*t2410*t3566*var3[25];
  p_output1[6]=t4076;
  p_output1[7]=t4517;
  p_output1[8]=t4805;
  p_output1[9]=t5034;
  p_output1[10]=t5155;
  p_output1[11]=t5231;
  p_output1[12]=-1.*t5556*var2[2] - 1.*t5556*var2[6] - 1.*var2[7]*(-8.128*t1376*t1472*t2145*var3[0] + 2.032*t3473*t506*var3[0] + 24.384*t1376*t1472*t2145*var3[5] - 24.384*t2219*t2284*t2341*var3[5] - 2.032*t3473*t506*var3[5] - 16.256*t1376*t1472*t2145*var3[10] + 60.959999999999994*t2219*t2284*t2341*var3[10] - 24.383999999999997*t1454*t2410*t2412*var3[10] - 36.57599999999999*t2219*t2284*t2341*var3[15] + 56.896*t1454*t2410*t2412*var3[15] - 8.128*t3566*t5527*var3[15] - 32.512*t1454*t2410*t2412*var3[20] + 18.288*t3566*t5527*var3[20] - 10.16*t3566*t5527*var3[25]);
  p_output1[13]=-1.*t6515*var2[2] - 1.*t6515*var2[6] - 1.*var2[7]*(-2.032*t3473*t506*var3[0] - 8.128*t1472*t526*t5840*var3[0] - 16.256*t1376*t1472*t2145*var3[5] + 8.128*t1472*t506*var3[5] + 2.032*t3473*t506*var3[5] - 24.384*t1376*t2219*t506*t5840*var3[5] + 8.128*t1472*t526*t5840*var3[5] + 16.256*t1376*t1472*t2145*var3[10] + 24.383999999999997*t1376*t2145*t2219*var3[10] - 36.57599999999999*t2219*t2284*t2341*var3[10] - 8.128*t1472*t506*var3[10] - 24.383999999999997*t1454*t2145*t2341*t5840*var3[10] + 24.384*t1376*t2219*t506*t5840*var3[10] - 24.383999999999997*t1376*t2145*t2219*var3[15] + 24.384*t1454*t2284*t2341*var3[15] + 36.57599999999999*t2219*t2284*t2341*var3[15] - 32.512*t1454*t2410*t2412*var3[15] + 24.383999999999997*t1454*t2145*t2341*t5840*var3[15] - 8.128*t2284*t2412*t5840*var3[15] - 24.384*t1454*t2284*t2341*var3[20] + 8.128*t2410*t2412*var3[20] + 32.512*t1454*t2410*t2412*var3[20] - 10.16*t3566*t5527*var3[20] + 8.128*t2284*t2412*t5840*var3[20] - 8.128*t2410*t2412*var3[25] + 10.16*t3566*t5527*var3[25]);
  p_output1[14]=t6932;
  p_output1[15]=t6932;
  p_output1[16]=-1.*t6645*var2[2] - 1.*t6645*var2[6] - 1.*var2[7]*(3.3032192*t1472*t506*var3[1] + 9.9096576*t1376*t2145*t2219*var3[6] - 6.6064384*t1472*t506*var3[6] - 19.8193152*t1376*t2145*t2219*var3[11] + 9.9096576*t1454*t2284*t2341*var3[11] + 3.3032192*t1472*t506*var3[11] + 9.9096576*t1376*t2145*t2219*var3[16] - 19.8193152*t1454*t2284*t2341*var3[16] + 3.3032192*t2410*t2412*var3[16] + 9.9096576*t1454*t2284*t2341*var3[21] - 6.6064384*t2410*t2412*var3[21] + 3.3032192*t2410*t2412*var3[26]);
  p_output1[17]=t7141;
  p_output1[18]=t7141;
  p_output1[19]=1. + 2.032*t3473*t526*var3[1] + 8.128*t1376*t1472*t506*var3[6] - 2.032*t3473*t526*var3[6] + 12.191999999999998*t2145*t2219*t2341*var3[11] - 8.128*t1376*t1472*t506*var3[11] - 12.191999999999998*t2145*t2219*t2341*var3[16] + 8.128*t1454*t2284*t2412*var3[16] - 8.128*t1454*t2284*t2412*var3[21] + 2.032*t2410*t3566*var3[21] - 2.032*t2410*t3566*var3[26];
  p_output1[20]=t4076;
  p_output1[21]=t4517;
  p_output1[22]=t4805;
  p_output1[23]=t5034;
  p_output1[24]=t5155;
  p_output1[25]=t5231;
  p_output1[26]=-1.*t7324*var2[2] - 1.*t7324*var2[6] - 1.*var2[7]*(-8.128*t1376*t1472*t2145*var3[1] + 2.032*t3473*t506*var3[1] + 24.384*t1376*t1472*t2145*var3[6] - 24.384*t2219*t2284*t2341*var3[6] - 2.032*t3473*t506*var3[6] - 16.256*t1376*t1472*t2145*var3[11] + 60.959999999999994*t2219*t2284*t2341*var3[11] - 24.383999999999997*t1454*t2410*t2412*var3[11] - 36.57599999999999*t2219*t2284*t2341*var3[16] + 56.896*t1454*t2410*t2412*var3[16] - 8.128*t3566*t5527*var3[16] - 32.512*t1454*t2410*t2412*var3[21] + 18.288*t3566*t5527*var3[21] - 10.16*t3566*t5527*var3[26]);
  p_output1[27]=-1.*t7716*var2[2] - 1.*t7716*var2[6] - 1.*var2[7]*(-2.032*t3473*t506*var3[1] - 8.128*t1472*t526*t5840*var3[1] - 16.256*t1376*t1472*t2145*var3[6] + 8.128*t1472*t506*var3[6] + 2.032*t3473*t506*var3[6] - 24.384*t1376*t2219*t506*t5840*var3[6] + 8.128*t1472*t526*t5840*var3[6] + 16.256*t1376*t1472*t2145*var3[11] + 24.383999999999997*t1376*t2145*t2219*var3[11] - 36.57599999999999*t2219*t2284*t2341*var3[11] - 8.128*t1472*t506*var3[11] - 24.383999999999997*t1454*t2145*t2341*t5840*var3[11] + 24.384*t1376*t2219*t506*t5840*var3[11] - 24.383999999999997*t1376*t2145*t2219*var3[16] + 24.384*t1454*t2284*t2341*var3[16] + 36.57599999999999*t2219*t2284*t2341*var3[16] - 32.512*t1454*t2410*t2412*var3[16] + 24.383999999999997*t1454*t2145*t2341*t5840*var3[16] - 8.128*t2284*t2412*t5840*var3[16] - 24.384*t1454*t2284*t2341*var3[21] + 8.128*t2410*t2412*var3[21] + 32.512*t1454*t2410*t2412*var3[21] - 10.16*t3566*t5527*var3[21] + 8.128*t2284*t2412*t5840*var3[21] - 8.128*t2410*t2412*var3[26] + 10.16*t3566*t5527*var3[26]);
  p_output1[28]=t7762;
  p_output1[29]=t7762;
  p_output1[30]=-1.*t7740*var2[2] - 1.*t7740*var2[6] - 1.*var2[7]*(3.3032192*t1472*t506*var3[2] + 9.9096576*t1376*t2145*t2219*var3[7] - 6.6064384*t1472*t506*var3[7] - 19.8193152*t1376*t2145*t2219*var3[12] + 9.9096576*t1454*t2284*t2341*var3[12] + 3.3032192*t1472*t506*var3[12] + 9.9096576*t1376*t2145*t2219*var3[17] - 19.8193152*t1454*t2284*t2341*var3[17] + 3.3032192*t2410*t2412*var3[17] + 9.9096576*t1454*t2284*t2341*var3[22] - 6.6064384*t2410*t2412*var3[22] + 3.3032192*t2410*t2412*var3[27]);
  p_output1[31]=t7806;
  p_output1[32]=1.;
  p_output1[33]=t7806;
  p_output1[34]=2.032*t3473*t526*var3[2] + 8.128*t1376*t1472*t506*var3[7] - 2.032*t3473*t526*var3[7] + 12.191999999999998*t2145*t2219*t2341*var3[12] - 8.128*t1376*t1472*t506*var3[12] - 12.191999999999998*t2145*t2219*t2341*var3[17] + 8.128*t1454*t2284*t2412*var3[17] - 8.128*t1454*t2284*t2412*var3[22] + 2.032*t2410*t3566*var3[22] - 2.032*t2410*t3566*var3[27];
  p_output1[35]=t4076;
  p_output1[36]=t4517;
  p_output1[37]=t4805;
  p_output1[38]=t5034;
  p_output1[39]=t5155;
  p_output1[40]=t5231;
  p_output1[41]=-1.*t7846*var2[2] - 1.*t7846*var2[6] - 1.*var2[7]*(-8.128*t1376*t1472*t2145*var3[2] + 2.032*t3473*t506*var3[2] + 24.384*t1376*t1472*t2145*var3[7] - 24.384*t2219*t2284*t2341*var3[7] - 2.032*t3473*t506*var3[7] - 16.256*t1376*t1472*t2145*var3[12] + 60.959999999999994*t2219*t2284*t2341*var3[12] - 24.383999999999997*t1454*t2410*t2412*var3[12] - 36.57599999999999*t2219*t2284*t2341*var3[17] + 56.896*t1454*t2410*t2412*var3[17] - 8.128*t3566*t5527*var3[17] - 32.512*t1454*t2410*t2412*var3[22] + 18.288*t3566*t5527*var3[22] - 10.16*t3566*t5527*var3[27]);
  p_output1[42]=-1.*t7999*var2[2] - 1.*t7999*var2[6] - 1.*var2[7]*(-2.032*t3473*t506*var3[2] - 8.128*t1472*t526*t5840*var3[2] - 16.256*t1376*t1472*t2145*var3[7] + 8.128*t1472*t506*var3[7] + 2.032*t3473*t506*var3[7] - 24.384*t1376*t2219*t506*t5840*var3[7] + 8.128*t1472*t526*t5840*var3[7] + 16.256*t1376*t1472*t2145*var3[12] + 24.383999999999997*t1376*t2145*t2219*var3[12] - 36.57599999999999*t2219*t2284*t2341*var3[12] - 8.128*t1472*t506*var3[12] - 24.383999999999997*t1454*t2145*t2341*t5840*var3[12] + 24.384*t1376*t2219*t506*t5840*var3[12] - 24.383999999999997*t1376*t2145*t2219*var3[17] + 24.384*t1454*t2284*t2341*var3[17] + 36.57599999999999*t2219*t2284*t2341*var3[17] - 32.512*t1454*t2410*t2412*var3[17] + 24.383999999999997*t1454*t2145*t2341*t5840*var3[17] - 8.128*t2284*t2412*t5840*var3[17] - 24.384*t1454*t2284*t2341*var3[22] + 8.128*t2410*t2412*var3[22] + 32.512*t1454*t2410*t2412*var3[22] - 10.16*t3566*t5527*var3[22] + 8.128*t2284*t2412*t5840*var3[22] - 8.128*t2410*t2412*var3[27] + 10.16*t3566*t5527*var3[27]);
  p_output1[43]=t8036;
  p_output1[44]=t8036;
  p_output1[45]=-1.*t8018*var2[2] - 1.*t8018*var2[6] - 1.*var2[7]*(3.3032192*t1472*t506*var3[3] + 9.9096576*t1376*t2145*t2219*var3[8] - 6.6064384*t1472*t506*var3[8] - 19.8193152*t1376*t2145*t2219*var3[13] + 9.9096576*t1454*t2284*t2341*var3[13] + 3.3032192*t1472*t506*var3[13] + 9.9096576*t1376*t2145*t2219*var3[18] - 19.8193152*t1454*t2284*t2341*var3[18] + 3.3032192*t2410*t2412*var3[18] + 9.9096576*t1454*t2284*t2341*var3[23] - 6.6064384*t2410*t2412*var3[23] + 3.3032192*t2410*t2412*var3[28]);
  p_output1[46]=t8065;
  p_output1[47]=1.;
  p_output1[48]=t8065;
  p_output1[49]=2.032*t3473*t526*var3[3] + 8.128*t1376*t1472*t506*var3[8] - 2.032*t3473*t526*var3[8] + 12.191999999999998*t2145*t2219*t2341*var3[13] - 8.128*t1376*t1472*t506*var3[13] - 12.191999999999998*t2145*t2219*t2341*var3[18] + 8.128*t1454*t2284*t2412*var3[18] - 8.128*t1454*t2284*t2412*var3[23] + 2.032*t2410*t3566*var3[23] - 2.032*t2410*t3566*var3[28];
  p_output1[50]=t4076;
  p_output1[51]=t4517;
  p_output1[52]=t4805;
  p_output1[53]=t5034;
  p_output1[54]=t5155;
  p_output1[55]=t5231;
  p_output1[56]=-1.*t8092*var2[2] - 1.*t8092*var2[6] - 1.*var2[7]*(-8.128*t1376*t1472*t2145*var3[3] + 2.032*t3473*t506*var3[3] + 24.384*t1376*t1472*t2145*var3[8] - 24.384*t2219*t2284*t2341*var3[8] - 2.032*t3473*t506*var3[8] - 16.256*t1376*t1472*t2145*var3[13] + 60.959999999999994*t2219*t2284*t2341*var3[13] - 24.383999999999997*t1454*t2410*t2412*var3[13] - 36.57599999999999*t2219*t2284*t2341*var3[18] + 56.896*t1454*t2410*t2412*var3[18] - 8.128*t3566*t5527*var3[18] - 32.512*t1454*t2410*t2412*var3[23] + 18.288*t3566*t5527*var3[23] - 10.16*t3566*t5527*var3[28]);
  p_output1[57]=-1.*t8168*var2[2] - 1.*t8168*var2[6] - 1.*var2[7]*(-2.032*t3473*t506*var3[3] - 8.128*t1472*t526*t5840*var3[3] - 16.256*t1376*t1472*t2145*var3[8] + 8.128*t1472*t506*var3[8] + 2.032*t3473*t506*var3[8] - 24.384*t1376*t2219*t506*t5840*var3[8] + 8.128*t1472*t526*t5840*var3[8] + 16.256*t1376*t1472*t2145*var3[13] + 24.383999999999997*t1376*t2145*t2219*var3[13] - 36.57599999999999*t2219*t2284*t2341*var3[13] - 8.128*t1472*t506*var3[13] - 24.383999999999997*t1454*t2145*t2341*t5840*var3[13] + 24.384*t1376*t2219*t506*t5840*var3[13] - 24.383999999999997*t1376*t2145*t2219*var3[18] + 24.384*t1454*t2284*t2341*var3[18] + 36.57599999999999*t2219*t2284*t2341*var3[18] - 32.512*t1454*t2410*t2412*var3[18] + 24.383999999999997*t1454*t2145*t2341*t5840*var3[18] - 8.128*t2284*t2412*t5840*var3[18] - 24.384*t1454*t2284*t2341*var3[23] + 8.128*t2410*t2412*var3[23] + 32.512*t1454*t2410*t2412*var3[23] - 10.16*t3566*t5527*var3[23] + 8.128*t2284*t2412*t5840*var3[23] - 8.128*t2410*t2412*var3[28] + 10.16*t3566*t5527*var3[28]);
  p_output1[58]=t8208;
  p_output1[59]=t8208;
  p_output1[60]=-1.*t8189*var2[2] - 1.*t8189*var2[6] - 1.*var2[7]*(3.3032192*t1472*t506*var3[4] + 9.9096576*t1376*t2145*t2219*var3[9] - 6.6064384*t1472*t506*var3[9] - 19.8193152*t1376*t2145*t2219*var3[14] + 9.9096576*t1454*t2284*t2341*var3[14] + 3.3032192*t1472*t506*var3[14] + 9.9096576*t1376*t2145*t2219*var3[19] - 19.8193152*t1454*t2284*t2341*var3[19] + 3.3032192*t2410*t2412*var3[19] + 9.9096576*t1454*t2284*t2341*var3[24] - 6.6064384*t2410*t2412*var3[24] + 3.3032192*t2410*t2412*var3[29]);
  p_output1[61]=t8240;
  p_output1[62]=1.;
  p_output1[63]=t8240;
  p_output1[64]=2.032*t3473*t526*var3[4] + 8.128*t1376*t1472*t506*var3[9] - 2.032*t3473*t526*var3[9] + 12.191999999999998*t2145*t2219*t2341*var3[14] - 8.128*t1376*t1472*t506*var3[14] - 12.191999999999998*t2145*t2219*t2341*var3[19] + 8.128*t1454*t2284*t2412*var3[19] - 8.128*t1454*t2284*t2412*var3[24] + 2.032*t2410*t3566*var3[24] - 2.032*t2410*t3566*var3[29];
  p_output1[65]=t4076;
  p_output1[66]=t4517;
  p_output1[67]=t4805;
  p_output1[68]=t5034;
  p_output1[69]=t5155;
  p_output1[70]=t5231;
  p_output1[71]=-1.*t8272*var2[2] - 1.*t8272*var2[6] - 1.*var2[7]*(-8.128*t1376*t1472*t2145*var3[4] + 2.032*t3473*t506*var3[4] + 24.384*t1376*t1472*t2145*var3[9] - 24.384*t2219*t2284*t2341*var3[9] - 2.032*t3473*t506*var3[9] - 16.256*t1376*t1472*t2145*var3[14] + 60.959999999999994*t2219*t2284*t2341*var3[14] - 24.383999999999997*t1454*t2410*t2412*var3[14] - 36.57599999999999*t2219*t2284*t2341*var3[19] + 56.896*t1454*t2410*t2412*var3[19] - 8.128*t3566*t5527*var3[19] - 32.512*t1454*t2410*t2412*var3[24] + 18.288*t3566*t5527*var3[24] - 10.16*t3566*t5527*var3[29]);
  p_output1[72]=-1.*t8353*var2[2] - 1.*t8353*var2[6] - 1.*var2[7]*(-2.032*t3473*t506*var3[4] - 8.128*t1472*t526*t5840*var3[4] - 16.256*t1376*t1472*t2145*var3[9] + 8.128*t1472*t506*var3[9] + 2.032*t3473*t506*var3[9] - 24.384*t1376*t2219*t506*t5840*var3[9] + 8.128*t1472*t526*t5840*var3[9] + 16.256*t1376*t1472*t2145*var3[14] + 24.383999999999997*t1376*t2145*t2219*var3[14] - 36.57599999999999*t2219*t2284*t2341*var3[14] - 8.128*t1472*t506*var3[14] - 24.383999999999997*t1454*t2145*t2341*t5840*var3[14] + 24.384*t1376*t2219*t506*t5840*var3[14] - 24.383999999999997*t1376*t2145*t2219*var3[19] + 24.384*t1454*t2284*t2341*var3[19] + 36.57599999999999*t2219*t2284*t2341*var3[19] - 32.512*t1454*t2410*t2412*var3[19] + 24.383999999999997*t1454*t2145*t2341*t5840*var3[19] - 8.128*t2284*t2412*t5840*var3[19] - 24.384*t1454*t2284*t2341*var3[24] + 8.128*t2410*t2412*var3[24] + 32.512*t1454*t2410*t2412*var3[24] - 10.16*t3566*t5527*var3[24] + 8.128*t2284*t2412*t5840*var3[24] - 8.128*t2410*t2412*var3[29] + 10.16*t3566*t5527*var3[29]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 9 && ncols == 1) && 
      !(mrows == 1 && ncols == 9))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 9 && ncols == 1) && 
      !(mrows == 1 && ncols == 9))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 2 && ncols == 1) && 
      !(mrows == 1 && ncols == 2))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 73, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "J_d1y_position_RightSS2.hh"

namespace RightSS2
{

void J_d1y_position_RightSS2_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
